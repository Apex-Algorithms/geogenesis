/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type {
  TestOnlyPluginUpgraderCondition,
  TestOnlyPluginUpgraderConditionInterface,
} from '../../test/TestOnlyPluginUpgraderCondition'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract DAO',
        name: '_dao',
        type: 'address',
      },
      {
        internalType: 'contract PluginSetupProcessor',
        name: '_psp',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_targetPluginAddresses',
        type: 'address[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'decodeApplyUpdateCalldata',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'daoAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'targetPluginAddress',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'decodeGrantRevokeCalldata',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'getSelector',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_permissionId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'isGranted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'isValidApplyUpdateCalldata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_grantData',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_revokeData',
        type: 'bytes',
      },
    ],
    name: 'isValidGrantRevokeCalldata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000d2b38038062000d2b83398101604081905262000034916200015e565b8282826001600160a01b03831615806200005557506001600160a01b038216155b806200006057508051155b156200007f57604051630e52390960e41b815260040160405180910390fd5b60005b8151811015620000e257600160026000848481518110620000a757620000a76200025e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010162000082565b5050600180546001600160a01b039283166001600160a01b031991821617909155600080549390921692169190911790555062000274915050565b6001600160a01b03811681146200013357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b805162000159816200011d565b919050565b6000806000606084860312156200017457600080fd5b835162000181816200011d565b8093505060208085015162000196816200011d565b60408601519093506001600160401b0380821115620001b457600080fd5b818701915087601f830112620001c957600080fd5b815181811115620001de57620001de62000136565b8060051b604051601f19603f8301168101818110858211171562000206576200020662000136565b60405291825284820192508381018501918a8311156200022557600080fd5b938501935b828510156200024e576200023e856200014c565b845293850193928501926200022a565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b610aa780620002846000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633fb834d81161005b5780633fb834d8146100e957806356c6f3201461012c57806375a5b2b21461013f578063efbb7590146101a057600080fd5b806301ffc9a7146100825780630cbd17c8146100aa5780632675fdd0146100d6575b600080fd5b6100956100903660046106d5565b6101b3565b60405190151581526020015b60405180910390f35b6100bd6100b83660046107df565b6101ea565b6040516001600160e01b031990911681526020016100a1565b6100956100e4366004610838565b6101f7565b6100fc6100f73660046107df565b6103fc565b604080516001600160e01b031990941684526001600160a01b0392831660208501529116908201526060016100a1565b61009561013a3660046108d3565b61042b565b61016861014d3660046107df565b60208101516024820151604483015160648401519193509193565b604080516001600160e01b03199590951685526001600160a01b039384166020860152919092169083015260608201526080016100a1565b6100956101ae3660046107df565b61043e565b60006001600160e01b031982166302675fdd60e41b14806101e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006101e4826020015190565b60008061023984848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061044992505050565b90506001600160e01b031981166331c6fcc960e21b1461025d5760009150506103f3565b600061026c8460048188610937565b8101906102799190610961565b509150508051600314610291576000925050506103f3565b6000805482516001600160a01b039091169183916102b1576102b1610a84565b6020026020010151600001516001600160a01b031614158061030a575060005481516001600160a01b0390911690829060029081106102f2576102f2610a84565b6020026020010151600001516001600160a01b031614155b1561031a576000925050506103f3565b6103608160008151811061033057610330610a84565b6020026020010151604001518260028151811061034f5761034f610a84565b602002602001015160400151610450565b61036f576000925050506103f3565b6001805482516001600160a01b03909116918391811061039157610391610a84565b6020026020010151600001516001600160a01b0316146103b6576000925050506103f3565b6103dd816001815181106103cc576103cc610a84565b602002602001015160400151610632565b6103ec576000925050506103f3565b6001925050505b95945050505050565b600080600061041e846020810151602480830151604484015190930101519092565b9250925092509193909250565b60006104378383610450565b9392505050565b60006101e482610632565b6020015190565b600080600080600061047987602081015160248201516044830151606490930151919390929190565b929650909450925090506001600160e01b031984166335a2eb4b60e21b146104a85760009450505050506101e4565b6001600160a01b03831660009081526002602052604090205460ff166104d55760009450505050506101e4565b6001546001600160a01b038381169116146104f75760009450505050506101e4565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5811461052b5760009450505050506101e4565b6020860151602487015160448801516064890151633658153160e21b6001600160e01b0319851614610568576000985050505050505050506101e4565b6001600160a01b03831660009081526002602052604090205460ff16610599576000985050505050505050506101e4565b6001546001600160a01b038381169116146105bf576000985050505050505050506101e4565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581146105f7576000985050505050505050506101e4565b826001600160a01b0316876001600160a01b031614610621576000985050505050505050506101e4565b5060019a9950505050505050505050565b600080600080610655856020810151602480830151604484015190930101519092565b919450925090506001600160e01b031983166322e12c6360e01b1461067f57506000949350505050565b6000546001600160a01b0383811691161461069f57506000949350505050565b6001600160a01b03811660009081526002602052604090205460ff166106ca57506000949350505050565b506001949350505050565b6000602082840312156106e757600080fd5b81356001600160e01b03198116811461043757600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610738576107386106ff565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610767576107676106ff565b604052919050565b600082601f83011261078057600080fd5b813567ffffffffffffffff81111561079a5761079a6106ff565b6107ad601f8201601f191660200161073e565b8181528460208386010111156107c257600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156107f157600080fd5b813567ffffffffffffffff81111561080857600080fd5b6108148482850161076f565b949350505050565b80356001600160a01b038116811461083357600080fd5b919050565b60008060008060006080868803121561085057600080fd5b6108598661081c565b94506108676020870161081c565b935060408601359250606086013567ffffffffffffffff8082111561088b57600080fd5b818801915088601f83011261089f57600080fd5b8135818111156108ae57600080fd5b8960208285010111156108c057600080fd5b9699959850939650602001949392505050565b600080604083850312156108e657600080fd5b823567ffffffffffffffff808211156108fe57600080fd5b61090a8683870161076f565b9350602085013591508082111561092057600080fd5b5061092d8582860161076f565b9150509250929050565b6000808585111561094757600080fd5b8386111561095457600080fd5b5050820193919092039150565b60008060006060848603121561097657600080fd5b8335925060208085013567ffffffffffffffff8082111561099657600080fd5b818701915087601f8301126109aa57600080fd5b8135818111156109bc576109bc6106ff565b8060051b6109cb85820161073e565b918252838101850191858101908b8411156109e557600080fd5b86860192505b83831015610a6d57823585811115610a0257600080fd5b86016060818e03601f19011215610a1857600080fd5b610a20610715565b610a2b89830161081c565b8152604082013589820152606082013587811115610a495760008081fd5b610a578f8b8386010161076f565b60408301525083525091860191908601906109eb565b989b989a5050505060409690960135955050505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000811000a'

type TestOnlyPluginUpgraderConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: TestOnlyPluginUpgraderConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class TestOnlyPluginUpgraderCondition__factory extends ContractFactory {
  constructor(...args: TestOnlyPluginUpgraderConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestOnlyPluginUpgraderCondition> {
    return super.deploy(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    ) as Promise<TestOnlyPluginUpgraderCondition>
  }
  override getDeployTransaction(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    )
  }
  override attach(address: string): TestOnlyPluginUpgraderCondition {
    return super.attach(address) as TestOnlyPluginUpgraderCondition
  }
  override connect(signer: Signer): TestOnlyPluginUpgraderCondition__factory {
    return super.connect(signer) as TestOnlyPluginUpgraderCondition__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TestOnlyPluginUpgraderConditionInterface {
    return new utils.Interface(_abi) as TestOnlyPluginUpgraderConditionInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOnlyPluginUpgraderCondition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestOnlyPluginUpgraderCondition
  }
}
