/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type {
  TestMemberAccessPlugin,
  TestMemberAccessPluginInterface,
} from '../../test/TestMemberAccessPlugin'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [],
    name: 'AddresslistDisabled',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_member',
        type: 'address',
      },
    ],
    name: 'AlreadyMember',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_member',
        type: 'address',
      },
    ],
    name: 'AlreadyNotMember',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ApprovalCastForbidden',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dao',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    name: 'DaoUnauthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidContract',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ProposalCreationForbidden',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecutionForbidden',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'editor',
        type: 'address',
      },
    ],
    name: 'Approved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'proposalDuration',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'mainVotingPlugin',
        type: 'address',
      },
    ],
    name: 'MultisigSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'startDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'endDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    name: 'ProposalCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'editor',
        type: 'address',
      },
    ],
    name: 'Rejected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPDATE_MULTISIG_SETTINGS_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_PLUGIN_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'canApprove',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'canExecute',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: '_actions',
        type: 'tuple[]',
      },
    ],
    name: 'createArbitraryProposal',
    outputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'contract IDAO',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'getProposal',
    outputs: [
      {
        internalType: 'bool',
        name: 'executed',
        type: 'bool',
      },
      {
        internalType: 'uint16',
        name: 'approvals',
        type: 'uint16',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'minApprovals',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'snapshotBlock',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'startDate',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'endDate',
            type: 'uint64',
          },
        ],
        internalType: 'struct MemberAccessPlugin.ProposalParameters',
        name: 'parameters',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: 'failsafeActionMap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'hasApproved',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDAO',
        name: '_dao',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint64',
            name: 'proposalDuration',
            type: 'uint64',
          },
          {
            internalType: 'contract MainVotingPlugin',
            name: 'mainVotingPlugin',
            type: 'address',
          },
        ],
        internalType: 'struct MemberAccessPlugin.MultisigSettings',
        name: '_multisigSettings',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isEditor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isMember',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastMultisigSettingsChange',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'multisigSettings',
    outputs: [
      {
        internalType: 'uint64',
        name: 'proposalDuration',
        type: 'uint64',
      },
      {
        internalType: 'contract MainVotingPlugin',
        name: 'mainVotingPlugin',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pluginType',
    outputs: [
      {
        internalType: 'enum IPlugin.PluginType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proposalCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_proposedMember',
        type: 'address',
      },
    ],
    name: 'proposeNewMember',
    outputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_proposedMember',
        type: 'address',
      },
    ],
    name: 'proposeRemoveMember',
    outputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'reject',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'proposalDuration',
            type: 'uint64',
          },
          {
            internalType: 'contract MainVotingPlugin',
            name: 'mainVotingPlugin',
            type: 'address',
          },
        ],
        internalType: 'struct MemberAccessPlugin.MultisigSettings',
        name: '_multisigSettings',
        type: 'tuple',
      },
    ],
    name: 'updateMultisigSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612a976200011f6000396000818161060901528181610693015281816107890152818161080e015261093f0152612a976000f3fe6080604052600436106101a15760003560e01c806388ddd760116100e1578063bc2083021161008a578063cc63604a11610064578063cc63604a146104f5578063da35c66414610515578063e097b3ff1461052a578063fe0d94c11461058657600080fd5b8063bc20830214610455578063c7f758a814610490578063c9c4bfca146104c157600080fd5b8063a230c524116100bb578063a230c524146103f5578063b759f95414610415578063b8adaa111461043557600080fd5b806388ddd76014610395578063936b0c22146103b5578063a0748154146103d557600080fd5b806341de68301161014e57806352d1902d1161012857806352d1902d1461032b5780635c60da1b1461034057806370e99d7614610355578063766139241461037557600080fd5b806341de6830146102dc5780634f1ef286146102f8578063521f80ad1461030b57600080fd5b80632caf024b1161017f5780632caf024b146102465780633659cfe6146102885780634162169f146102aa57600080fd5b806301ffc9a7146101a65780632358d5a8146101db57806329245f5614610226575b600080fd5b3480156101b257600080fd5b506101c66101c136600461204f565b6105a6565b60405190151581526020015b60405180910390f35b3480156101e757600080fd5b506101c66101f636600461208e565b600082815261015f602090815260408083206001600160a01b038516845260020190915290205460ff1692915050565b34801561023257600080fd5b506101c661024136600461208e565b6105ec565b34801561025257600080fd5b5061027a7fb1750e46d35a0069c8465b8643e7838d2149a842a2db8ee233d9835590040cad81565b6040519081526020016101d2565b34801561029457600080fd5b506102a86102a33660046120be565b6105ff565b005b3480156102b657600080fd5b5060c9546001600160a01b03165b6040516001600160a01b0390911681526020016101d2565b3480156102e857600080fd5b5060006040516101d291906120db565b6102a86103063660046121f1565b61077f565b34801561031757600080fd5b506102a8610326366004612259565b6108eb565b34801561033757600080fd5b5061027a610932565b34801561034c57600080fd5b506102c46109f8565b34801561036157600080fd5b5061027a6103703660046122e2565b610a30565b34801561038157600080fd5b5061027a61039036600461240b565b610a45565b3480156103a157600080fd5b506102a86103b0366004612462565b610b6f565b3480156103c157600080fd5b5061027a6103d036600461240b565b610c9b565b3480156103e157600080fd5b506101c66103f03660046120be565b610da7565b34801561040157600080fd5b506101c66104103660046120be565b610e1f565b34801561042157600080fd5b506102a8610430366004612498565b610e5a565b34801561044157600080fd5b506102a8610450366004612498565b610f2a565b34801561046157600080fd5b50610161546104779067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101d2565b34801561049c57600080fd5b506104b06104ab366004612498565b610fe6565b6040516101d295949392919061257f565b3480156104cd57600080fd5b5061027a7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581565b34801561050157600080fd5b506101c6610510366004612498565b61118e565b34801561052157600080fd5b5061027a611199565b34801561053657600080fd5b506101605461055e9067ffffffffffffffff811690600160401b90046001600160a01b031682565b6040805167ffffffffffffffff90931683526001600160a01b039091166020830152016101d2565b34801561059257600080fd5b506102a86105a1366004612498565b6111a5565b60006001600160e01b0319821663f83f3a6360e01b14806105d757506001600160e01b03198216638f4b872160e01b145b806105e657506105e6826111d7565b92915050565b60006105f883836111fc565b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106915760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106ec7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146107575760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610688565b61076081611270565b6040805160008082526020820190925261077c918391906112a9565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361080c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610688565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108677f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146108d25760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610688565b6108db82611270565b6108e7828260016112a9565b5050565b60c9547fb1750e46d35a0069c8465b8643e7838d2149a842a2db8ee233d9835590040cad90610929906001600160a01b031630335b84600036611449565b6108e782611505565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109d25760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610688565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b90565b6000610a2b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b6000610a3d84848461164c565b949350505050565b6000610a5082610e1f565b610a7857604051638e9811eb60e01b81526001600160a01b0383166004820152602401610688565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610a8f579050506040805160608101825261016054600160401b90046001600160a01b0390811682526000602083015282519087166024820152929350919082019060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663058e524d60e11b179052905281518290600090610b5057610b506125f3565b6020026020010181905250610b6685858361164c565b95945050505050565b600054610100900460ff1615808015610b8f5750600054600160ff909116105b80610ba95750303b158015610ba9575060005460ff166001145b610c1b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610688565b6000805460ff191660011790558015610c3e576000805461ff0019166101001790555b610c478361191b565b610c5082611505565b8015610c96576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000610ca682610e1f565b15610ccf57604051630268f92960e01b81526001600160a01b0383166004820152602401610688565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610ce6579050506040805160608101825261016054600160401b90046001600160a01b0390811682526000602083015282519087166024820152929350919082019060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663329b55b760e21b179052905281518290600090610b5057610b506125f3565b6101605460405163281d205560e21b81526001600160a01b038381166004830152600092600160401b9004169063a0748154906024015b602060405180830381865afa158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190612609565b6101605460405163288c314960e21b81526001600160a01b038381166004830152600092600160401b9004169063a230c52490602401610dde565b33610e6582826111fc565b610e9457604051631bf6d43960e11b8152600481018390526001600160a01b0382166024820152604401610688565b600082815261015f60209081526040808320805462ffff0019811660016101009283900461ffff9081168201169092021782556001600160a01b03861680865260028301909452828520805460ff191690911790559051909285917f7b39c92a7e1a86e846edaeff6eba715a046352c596794c2a374269c126a997689190a3610f1c8361198f565b15610c9657610c96836119d2565b33610f3582826111fc565b610f6457604051631bf6d43960e11b8152600481018390526001600160a01b0382166024820152604401610688565b600082815261015f60205260409020610f7c42611b40565b60018201805467ffffffffffffffff92909216600160901b0267ffffffffffffffff60901b199092169190911790556040516001600160a01b0383169084907fbaccaaec0e0ded96134440c58c7614efc37a48ee86401b402ff6772832942e6d90600090a3505050565b604080516080808201835260008083526020808401829052838501829052606093840182905285825261015f8152848220805486519485018752600182015461ffff808216875267ffffffffffffffff6201000083048116888701526a010000000000000000000083048116888b0152600160901b90920490911686880152600383018054895181870281018701909a52808a5260ff841699610100909404909216979594909190859084015b82821015611177576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916110e69061262b565b80601f01602080910402602001604051908101604052809291908181526020018280546111129061262b565b801561115f5780601f106111345761010080835404028352916020019161115f565b820191906000526020600020905b81548152906001019060200180831161114257829003601f168201915b50505050508152505081526020019060010190611093565b505050509250806004015491505091939590929450565b60006105e68261198f565b6000610a2b61012d5490565b6111ae8161198f565b6111ce57604051639fefd0f160e01b815260048101829052602401610688565b61077c816119d2565b60006001600160e01b0319821663368d719960e21b14806105e657506105e682611bc4565b600082815261015f6020526040812061121481611c14565b6112225760009150506105e6565b61122b83610da7565b6112395760009150506105e6565b6001600160a01b038316600090815260028201602052604090205460ff16156112665760009150506105e6565b5060019392505050565b60c9547f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5906108e7906001600160a01b03163033610920565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112dc57610c9683611c7e565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611336575060408051601f3d908101601f191682019092526113339181019061265f565b60015b6113a85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610688565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461143d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610688565b50610c96838383611d49565b604051637ef7c88360e11b81526001600160a01b0387169063fdef91069061147d90889088908890889088906004016126a1565b602060405180830381865afa15801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190612609565b6114fd57604051630cb6f8ed60e21b81526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401610688565b505050505050565b61151560408201602083016120be565b6040516301ffc9a760e01b81526304f9486b60e41b60048201526001600160a01b0391909116906301ffc9a790602401602060405180830381865afa158015611562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115869190612609565b6115a3576040516303777f6960e51b815260040160405180910390fd5b806101606115b182826126f5565b9050506115bd43611b40565b610161805467ffffffffffffffff191667ffffffffffffffff929092169190911790557f480f0335e7643572ae2d462ce8b0d37f1741923755b52b7685c7846a564ad8fb61160e6020830183612767565b61161e60408401602085016120be565b6040805167ffffffffffffffff90931683526001600160a01b0390911660208301520160405180910390a150565b600080600161165a43611b40565b61016154919003915067ffffffffffffffff8083169116111561169257604051633aae64d160e21b8152336004820152602401610688565b600061169d42611b40565b610160549091506000906116bb9067ffffffffffffffff1683612784565b90506116c5611d6e565b9350336001600160a01b0316847fa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c9284848b8b8b600060405161170c969594939291906127ba565b60405180910390a3600084815261015f6020526040812060018101805471ffffffffffffffffffffffffffffffff000019166201000067ffffffffffffffff8881169190910271ffffffffffffffff000000000000000000001916919091176a0100000000000000000000878316021767ffffffffffffffff60901b1916600160901b91861691909102179055905b865181101561183757816003018782815181106117ba576117ba6125f3565b6020908102919091018101518254600180820185556000948552938390208251600390920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911781559181015192820192909255604082015160028201906118299082612857565b50505080600101905061179b565b5061184133610da7565b156118fe57600261016060000160089054906101000a90046001600160a01b03166001600160a01b03166327f1608d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561189f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c3919061265f565b10156118df576001818101805461ffff191690911790556118f0565b60018101805461ffff191660021790555b6118f985610e5a565b611910565b6001818101805461ffff191690911790555b505050509392505050565b600054610100900460ff166119865760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610688565b61077c81611d89565b600081815261015f602052604081206119a781611c14565b6119b45750600092915050565b6001810154905461ffff918216610100909104909116101592915050565b600081815261015f60205260409020805460ff19166001178155611b3a611a0160c9546001600160a01b031690565b8361015f6000868152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015611b1d576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191611a8c9061262b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ab89061262b565b8015611b055780601f10611ada57610100808354040283529160200191611b05565b820191906000526020600020905b815481529060010190602001808311611ae857829003601f168201915b50505050508152505081526020019060010190611a39565b505050600087815261015f60205260409020600401549050611e23565b50505050565b600067ffffffffffffffff821115611bc05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f34206269747300000000000000000000000000000000000000000000000000006064820152608401610688565b5090565b60006001600160e01b0319821663041de68360e41b1480611bf557506001600160e01b031982166352d1902d60e01b145b806105e657506301ffc9a760e01b6001600160e01b03198316146105e6565b600080611c2042611b40565b835490915060ff16158015611c545750600183015467ffffffffffffffff8083166a01000000000000000000009092041611155b80156105f85750600183015467ffffffffffffffff808316600160901b9092041610159392505050565b6001600160a01b0381163b611cfb5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610688565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b611d5283611ed9565b600082511180611d5f5750805b15610c9657611b3a8383611f19565b6000611d78611199565b90506109f561012d80546001019055565b600054610100900460ff16611df45760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610688565b60c9805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6040516331c6fcc960e21b81526060906000906001600160a01b0387169063c71bf32490611e5990889088908890600401612917565b6000604051808303816000875af1158015611e78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ea09190810190612940565b604051919350915085907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a294509492505050565b611ee281611c7e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606105f88383604051806060016040528060278152602001612a64602791396060600080856001600160a01b031685604051611f569190612a34565b600060405180830381855af49150503d8060008114611f91576040519150601f19603f3d011682016040523d82523d6000602084013e611f96565b606091505b5091509150611fa786838387611fb1565b9695505050505050565b60608315612020578251600003612019576001600160a01b0385163b6120195760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610688565b5081610a3d565b610a3d83838151156120355781518083602001fd5b8060405162461bcd60e51b81526004016106889190612a50565b60006020828403121561206157600080fd5b81356001600160e01b0319811681146105f857600080fd5b6001600160a01b038116811461077c57600080fd5b600080604083850312156120a157600080fd5b8235915060208301356120b381612079565b809150509250929050565b6000602082840312156120d057600080fd5b81356105f881612079565b60208101600383106120fd57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561213c5761213c612103565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561216b5761216b612103565b604052919050565b600067ffffffffffffffff82111561218d5761218d612103565b50601f01601f191660200190565b600082601f8301126121ac57600080fd5b81356121bf6121ba82612173565b612142565b8181528460208386010111156121d457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561220457600080fd5b823561220f81612079565b9150602083013567ffffffffffffffff81111561222b57600080fd5b6122378582860161219b565b9150509250929050565b60006040828403121561225357600080fd5b50919050565b60006040828403121561226b57600080fd5b6105f88383612241565b60008083601f84011261228757600080fd5b50813567ffffffffffffffff81111561229f57600080fd5b6020830191508360208285010111156122b757600080fd5b9250929050565b600067ffffffffffffffff8211156122d8576122d8612103565b5060051b60200190565b6000806000604084860312156122f757600080fd5b833567ffffffffffffffff8082111561230f57600080fd5b61231b87838801612275565b909550935060209150858201358181111561233557600080fd5b8601601f8101881361234657600080fd5b80356123546121ba826122be565b81815260059190911b8201840190848101908a83111561237357600080fd5b8584015b838110156123fa5780358681111561238e57600080fd5b85016060818e03601f190112156123a55760008081fd5b6123ad612119565b888201356123ba81612079565b81526040820135898201526060820135888111156123d85760008081fd5b6123e68f8b8386010161219b565b604083015250845250918601918601612377565b508096505050505050509250925092565b60008060006040848603121561242057600080fd5b833567ffffffffffffffff81111561243757600080fd5b61244386828701612275565b909450925050602084013561245781612079565b809150509250925092565b6000806060838503121561247557600080fd5b823561248081612079565b915061248f8460208501612241565b90509250929050565b6000602082840312156124aa57600080fd5b5035919050565b60005b838110156124cc5781810151838201526020016124b4565b50506000910152565b600081518084526124ed8160208601602086016124b1565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612572578284038952815180516001600160a01b03168552858101518686015260409081015160609186018290529061255e818701836124d5565b9a87019a955050509084019060010161251f565b5091979650505050505050565b6000610100871515835261ffff808816602085015280875116604085015250602086015167ffffffffffffffff80821660608601528060408901511660808601528060608901511660a086015250508060c08401526125e081840186612501565b9150508260e08301529695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561261b57600080fd5b815180151581146105f857600080fd5b600181811c9082168061263f57607f821691505b60208210810361225357634e487b7160e01b600052602260045260246000fd5b60006020828403121561267157600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b038088168352808716602084015250846040830152608060608301526126d4608083018486612678565b979650505050505050565b67ffffffffffffffff8116811461077c57600080fd5b8135612700816126df565b67ffffffffffffffff8116905081548167ffffffffffffffff198216178355602084013561272d81612079565b6001600160e01b03199190911690911760409190911b7bffffffffffffffffffffffffffffffffffffffff00000000000000001617905550565b60006020828403121561277957600080fd5b81356105f8816126df565b67ffffffffffffffff8181168382160190808211156127b357634e487b7160e01b600052601160045260246000fd5b5092915050565b600067ffffffffffffffff808916835280881660208401525060a060408301526127e860a083018688612678565b82810360608401526127fa8186612501565b91505060ff83166080830152979650505050505050565b601f821115610c9657600081815260208120601f850160051c810160208610156128385750805b601f850160051c820191505b818110156114fd57828155600101612844565b815167ffffffffffffffff81111561287157612871612103565b6128858161287f845461262b565b84612811565b602080601f8311600181146128ba57600084156128a25750858301515b600019600386901b1c1916600185901b1785556114fd565b600085815260208120601f198616915b828110156128e9578886015182559484019460019091019084016128ca565b50858210156129075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8381526060602082015260006129306060830185612501565b9050826040830152949350505050565b600080604080848603121561295457600080fd5b835167ffffffffffffffff8082111561296c57600080fd5b818601915086601f83011261298057600080fd5b815160206129906121ba836122be565b82815260059290921b8401810191818101908a8411156129af57600080fd5b8286015b84811015612a20578051868111156129cb5760008081fd5b8701603f81018d136129dd5760008081fd5b848101516129ed6121ba82612173565b8181528e8b838501011115612a025760008081fd5b612a11828883018d86016124b1565b855250509183019183016129b3565b509890910151979997985050505050505050565b60008251612a468184602087016124b1565b9190910192915050565b6020815260006105f860208301846124d556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000811000a'

type TestMemberAccessPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: TestMemberAccessPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class TestMemberAccessPlugin__factory extends ContractFactory {
  constructor(...args: TestMemberAccessPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestMemberAccessPlugin> {
    return super.deploy(overrides || {}) as Promise<TestMemberAccessPlugin>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): TestMemberAccessPlugin {
    return super.attach(address) as TestMemberAccessPlugin
  }
  override connect(signer: Signer): TestMemberAccessPlugin__factory {
    return super.connect(signer) as TestMemberAccessPlugin__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TestMemberAccessPluginInterface {
    return new utils.Interface(_abi) as TestMemberAccessPluginInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMemberAccessPlugin {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestMemberAccessPlugin
  }
}
