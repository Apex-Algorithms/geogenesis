/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type {
  OnlyPluginUpgraderCondition,
  OnlyPluginUpgraderConditionInterface,
} from '../../conditions/OnlyPluginUpgraderCondition'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract DAO',
        name: '_dao',
        type: 'address',
      },
      {
        internalType: 'contract PluginSetupProcessor',
        name: '_psp',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_targetPluginAddresses',
        type: 'address[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_permissionId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'isGranted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000aea38038062000aea833981016040819052620000349162000157565b6001600160a01b03831615806200005257506001600160a01b038216155b806200005d57508051155b156200007c57604051630e52390960e41b815260040160405180910390fd5b60005b8151811015620000df57600160026000848481518110620000a457620000a462000257565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016200007f565b5050600180546001600160a01b039283166001600160a01b031991821617909155600080549390921692169190911790556200026d565b6001600160a01b03811681146200012c57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620001528162000116565b919050565b6000806000606084860312156200016d57600080fd5b83516200017a8162000116565b809350506020808501516200018f8162000116565b60408601519093506001600160401b0380821115620001ad57600080fd5b818701915087601f830112620001c257600080fd5b815181811115620001d757620001d76200012f565b8060051b604051601f19603f83011681018181108582111715620001ff57620001ff6200012f565b60405291825284820192508381018501918a8311156200021e57600080fd5b938501935b828510156200024757620002378562000145565b8452938501939285019262000223565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b61086d806200027d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780632675fdd014610062575b600080fd5b61004e61004936600461053d565b610075565b604051901515815260200160405180910390f35b61004e61007036600461058a565b6100ac565b60006001600160e01b031982166302675fdd60e41b14806100a657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000806100ee84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102b192505050565b90506001600160e01b031981166331c6fcc960e21b146101125760009150506102a8565b60006101218460048188610625565b81019061012e91906106bf565b509150508051600314610146576000925050506102a8565b6000805482516001600160a01b039091169183916101665761016661084a565b6020026020010151600001516001600160a01b03161415806101bf575060005481516001600160a01b0390911690829060029081106101a7576101a761084a565b6020026020010151600001516001600160a01b031614155b156101cf576000925050506102a8565b610215816000815181106101e5576101e561084a565b602002602001015160400151826002815181106102045761020461084a565b6020026020010151604001516102b8565b610224576000925050506102a8565b6001805482516001600160a01b0390911691839181106102465761024661084a565b6020026020010151600001516001600160a01b03161461026b576000925050506102a8565b610292816001815181106102815761028161084a565b60200260200101516040015161049a565b6102a1576000925050506102a8565b6001925050505b95945050505050565b6020015190565b60008060008060006102e187602081015160248201516044830151606490930151919390929190565b929650909450925090506001600160e01b031984166335a2eb4b60e21b146103105760009450505050506100a6565b6001600160a01b03831660009081526002602052604090205460ff1661033d5760009450505050506100a6565b6001546001600160a01b0383811691161461035f5760009450505050506100a6565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581146103935760009450505050506100a6565b6020860151602487015160448801516064890151633658153160e21b6001600160e01b03198516146103d0576000985050505050505050506100a6565b6001600160a01b03831660009081526002602052604090205460ff16610401576000985050505050505050506100a6565b6001546001600160a01b03838116911614610427576000985050505050505050506100a6565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5811461045f576000985050505050505050506100a6565b826001600160a01b0316876001600160a01b031614610489576000985050505050505050506100a6565b5060019a9950505050505050505050565b6000806000806104bd856020810151602480830151604484015190930101519092565b919450925090506001600160e01b031983166322e12c6360e01b146104e757506000949350505050565b6000546001600160a01b0383811691161461050757506000949350505050565b6001600160a01b03811660009081526002602052604090205460ff1661053257506000949350505050565b506001949350505050565b60006020828403121561054f57600080fd5b81356001600160e01b03198116811461056757600080fd5b9392505050565b80356001600160a01b038116811461058557600080fd5b919050565b6000806000806000608086880312156105a257600080fd5b6105ab8661056e565b94506105b96020870161056e565b935060408601359250606086013567ffffffffffffffff808211156105dd57600080fd5b818801915088601f8301126105f157600080fd5b81358181111561060057600080fd5b89602082850101111561061257600080fd5b9699959850939650602001949392505050565b6000808585111561063557600080fd5b8386111561064257600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106885761068861064f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106b7576106b761064f565b604052919050565b6000806000606084860312156106d457600080fd5b8335925067ffffffffffffffff80602086013511156106f257600080fd5b6020850135850186601f82011261070857600080fd5b81813511156107195761071961064f565b6107296020823560051b0161068e565b81358082526020808301929160051b8401018981111561074857600080fd5b602084015b8181101561083357858135111561076357600080fd5b80358501601f196060828e038201121561077c57600080fd5b610784610665565b6107906020840161056e565b81526040830135602082015288606084013511156107ad57600080fd5b6060830135830192508d603f8401126107c557600080fd5b6020830135898111156107da576107da61064f565b6107eb602084601f8401160161068e565b92508083528e604082860101111561080257600080fd5b806040850160208501376000602082850101525081604082015280875250505060208401935060208101905061074d565b505080955050505050604084013590509250925092565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000811000a'

type OnlyPluginUpgraderConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: OnlyPluginUpgraderConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class OnlyPluginUpgraderCondition__factory extends ContractFactory {
  constructor(...args: OnlyPluginUpgraderConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnlyPluginUpgraderCondition> {
    return super.deploy(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    ) as Promise<OnlyPluginUpgraderCondition>
  }
  override getDeployTransaction(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    )
  }
  override attach(address: string): OnlyPluginUpgraderCondition {
    return super.attach(address) as OnlyPluginUpgraderCondition
  }
  override connect(signer: Signer): OnlyPluginUpgraderCondition__factory {
    return super.connect(signer) as OnlyPluginUpgraderCondition__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OnlyPluginUpgraderConditionInterface {
    return new utils.Interface(_abi) as OnlyPluginUpgraderConditionInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnlyPluginUpgraderCondition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnlyPluginUpgraderCondition
  }
}
