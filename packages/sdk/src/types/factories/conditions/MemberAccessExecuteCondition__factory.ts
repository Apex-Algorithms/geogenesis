/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type {
  MemberAccessExecuteCondition,
  MemberAccessExecuteConditionInterface,
} from '../../conditions/MemberAccessExecuteCondition'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_targetContract',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_permissionId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'isGranted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516105fc3803806105fc83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610569806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780632675fdd014610062575b600080fd5b61004e61004936600461022c565b610075565b604051901515815260200160405180910390f35b61004e610070366004610286565b6100ac565b60006001600160e01b031982166302675fdd60e41b14806100a657506301ffc9a760e01b6001600160e01b03198316145b92915050565b604080516020601f84018190048102820181019092528281526000916331c6fcc960e21b916100f591869086908190840183828082843760009201919091525061022592505050565b6001600160e01b0319161461010c5750600061021c565b600061011b8360048187610321565b81019061012891906103bb565b50915050805160011461013f57600091505061021c565b60008054825173ffffffffffffffffffffffffffffffffffffffff90911691839161016c5761016c610546565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff161461019d57600091505061021c565b60006101d0826000815181106101b5576101b5610546565b60200260200101516040015160208101516024909101519091565b5090506001600160e01b0319811663329b55b760e21b1480159061020557506001600160e01b0319811663058e524d60e11b14155b156102155760009250505061021c565b6001925050505b95945050505050565b6020015190565b60006020828403121561023e57600080fd5b81356001600160e01b03198116811461025657600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b60008060008060006080868803121561029e57600080fd5b6102a78661025d565b94506102b56020870161025d565b935060408601359250606086013567ffffffffffffffff808211156102d957600080fd5b818801915088601f8301126102ed57600080fd5b8135818111156102fc57600080fd5b89602082850101111561030e57600080fd5b9699959850939650602001949392505050565b6000808585111561033157600080fd5b8386111561033e57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156103845761038461034b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156103b3576103b361034b565b604052919050565b6000806000606084860312156103d057600080fd5b8335925067ffffffffffffffff80602086013511156103ee57600080fd5b6020850135850186601f82011261040457600080fd5b81813511156104155761041561034b565b6104256020823560051b0161038a565b81358082526020808301929160051b8401018981111561044457600080fd5b602084015b8181101561052f57858135111561045f57600080fd5b80358501601f196060828e038201121561047857600080fd5b610480610361565b61048c6020840161025d565b81526040830135602082015288606084013511156104a957600080fd5b6060830135830192508d603f8401126104c157600080fd5b6020830135898111156104d6576104d661034b565b6104e7602084601f8401160161038a565b92508083528e60408286010111156104fe57600080fd5b8060408501602085013760006020828501015250816040820152808752505050602084019350602081019050610449565b505080955050505050604084013590509250925092565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000811000a'

type MemberAccessExecuteConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MemberAccessExecuteConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MemberAccessExecuteCondition__factory extends ContractFactory {
  constructor(...args: MemberAccessExecuteConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _targetContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MemberAccessExecuteCondition> {
    return super.deploy(
      _targetContract,
      overrides || {}
    ) as Promise<MemberAccessExecuteCondition>
  }
  override getDeployTransaction(
    _targetContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_targetContract, overrides || {})
  }
  override attach(address: string): MemberAccessExecuteCondition {
    return super.attach(address) as MemberAccessExecuteCondition
  }
  override connect(signer: Signer): MemberAccessExecuteCondition__factory {
    return super.connect(signer) as MemberAccessExecuteCondition__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MemberAccessExecuteConditionInterface {
    return new utils.Interface(_abi) as MemberAccessExecuteConditionInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MemberAccessExecuteCondition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MemberAccessExecuteCondition
  }
}
