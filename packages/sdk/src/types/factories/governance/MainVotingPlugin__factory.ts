/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type {
  MainVotingPlugin,
  MainVotingPluginInterface,
} from '../../governance/MainVotingPlugin'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dao',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    name: 'DaoUnauthorized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'limit',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'actual',
        type: 'uint64',
      },
    ],
    name: 'DateOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'limit',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'actual',
        type: 'uint64',
      },
    ],
    name: 'DurationOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'InvalidAddresslistUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoEditorsLeft',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
    ],
    name: 'NotAMember',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyCreatorCanCancel',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'OnlyOneEditorPerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ProposalCreationForbidden',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecutionForbidden',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ProposalIsNotOpen',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'actual',
        type: 'uint256',
      },
    ],
    name: 'RatioOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: 'voteOption',
        type: 'uint8',
      },
    ],
    name: 'VoteCastForbidden',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'editor',
        type: 'address',
      },
    ],
    name: 'EditorAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'editor',
        type: 'address',
      },
    ],
    name: 'EditorRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'editors',
        type: 'address[]',
      },
    ],
    name: 'EditorsAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'MemberAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'MemberRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'startDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'endDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    name: 'ProposalCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'voter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'enum IMajorityVoting.VoteOption',
        name: 'voteOption',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'votingPower',
        type: 'uint256',
      },
    ],
    name: 'VoteCast',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'enum MajorityVotingBase.VotingMode',
        name: 'votingMode',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'supportThreshold',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'minParticipation',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'duration',
        type: 'uint64',
      },
    ],
    name: 'VotingSettingsUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPDATE_ADDRESSES_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPDATE_VOTING_SETTINGS_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_PLUGIN_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addEditor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'addresslistLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'addresslistLengthAtBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'canExecute',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_voter',
        type: 'address',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
    ],
    name: 'canVote',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'cancelProposal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: '_actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '_allowFailureMap',
        type: 'uint256',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
      {
        internalType: 'bool',
        name: '_tryEarlyExecution',
        type: 'bool',
      },
    ],
    name: 'createProposal',
    outputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'contract IDAO',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'duration',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'getProposal',
    outputs: [
      {
        internalType: 'bool',
        name: 'open',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'executed',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'startDate',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'endDate',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'snapshotBlock',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'minVotingPower',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.ProposalParameters',
        name: 'parameters',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'abstain',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'yes',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'no',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.Tally',
        name: 'tally',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_voter',
        type: 'address',
      },
    ],
    name: 'getVoteOption',
    outputs: [
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDAO',
        name: '_dao',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minParticipation',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'duration',
            type: 'uint64',
          },
        ],
        internalType: 'struct MajorityVotingBase.VotingSettings',
        name: '_votingSettings',
        type: 'tuple',
      },
      {
        internalType: 'address[]',
        name: '_initialEditors',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isEditor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isListed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'isListedAtBlock',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isMember',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isMinParticipationReached',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isSupportThresholdReached',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isSupportThresholdReachedEarly',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minParticipation',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pluginType',
    outputs: [
      {
        internalType: 'enum IPlugin.PluginType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proposalCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeEditor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'supportThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'totalVotingPower',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minParticipation',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'duration',
            type: 'uint64',
          },
        ],
        internalType: 'struct MajorityVotingBase.VotingSettings',
        name: '_votingSettings',
        type: 'tuple',
      },
    ],
    name: 'updateVotingSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
      {
        internalType: 'bool',
        name: '_tryEarlyExecution',
        type: 'bool',
      },
    ],
    name: 'vote',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'votingMode',
    outputs: [
      {
        internalType: 'enum MajorityVotingBase.VotingMode',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b603254610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60325460ff90811614620000e5576032805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051613ed06200011f60003960008181610b7701528181610c0101528181610f970152818161101c01526111020152613ed06000f3fe6080604052600436106102a05760003560e01c80637c36e8e81161016e578063ca6d56dc116100cb578063e0a8f6f51161007f578063e5975bdc11610064578063e5975bdc146107d7578063f794062e146107f7578063fe0d94c11461081757600080fd5b8063e0a8f6f514610797578063e4f3c3e4146107b757600080fd5b8063ce6366c4116100b0578063ce6366c414610742578063cf13114914610762578063da35c6641461078257600080fd5b8063ca6d56dc14610702578063cc63604a1461072257600080fd5b8063a230c52411610122578063bddf164a11610107578063bddf164a1461067c578063c7f758a81461069c578063c9c4bfca146106ce57600080fd5b8063a230c5241461063c578063b1bb8d261461065c57600080fd5b80638a4b00f8116101535780638a4b00f8146105a4578063970601d8146105c4578063a07481541461061c57600080fd5b80637c36e8e81461054f5780638377c4601461057057600080fd5b80632d55feaf1161021c5780634f1ef286116101d0578063536f9f42116101b5578063536f9f42146104fa5780635c60da1b1461051a5780636a6b2d861461052f57600080fd5b80634f1ef286146104d257806352d1902d146104e557600080fd5b80634162169f116102015780634162169f1461046c57806341de68301461049e5780634bcfb3a1146104b257600080fd5b80632d55feaf1461042c5780633659cfe61461044c57600080fd5b80630fb5a6b4116102735780631befc405116102585780631befc405146103b357806323d07188146103f557806327f1608d1461041757600080fd5b80630fb5a6b41461035257806317d1b4041461039357600080fd5b806301ffc9a7146102a5578063054fd2c2146102da5780630b1ca49a146103105780630de2185614610332575b600080fd5b3480156102b157600080fd5b506102c56102c03660046130d9565b610837565b60405190151581526020015b60405180910390f35b3480156102e657600080fd5b506101925465010000000000900463ffffffff165b60405163ffffffff90911681526020016102d1565b34801561031c57600080fd5b5061033061032b366004613118565b6108ce565b005b34801561033e57600080fd5b506102c561034d366004613135565b610989565b34801561035e57600080fd5b50610192546901000000000000000000900467ffffffffffffffff1660405167ffffffffffffffff90911681526020016102d1565b34801561039f57600080fd5b506102c56103ae366004613162565b610a2c565b3480156103bf57600080fd5b506103e77fbba35d41610b7d25c8e486006535c76bd423091563e694d206ae3d71ce949fe581565b6040519081526020016102d1565b34801561040157600080fd5b506101925460ff165b6040516102d191906131c6565b34801561042357600080fd5b506103e7610a43565b34801561043857600080fd5b50610330610447366004613118565b610a5d565b34801561045857600080fd5b50610330610467366004613118565b610b6d565b34801561047857600080fd5b5060fb546001600160a01b03165b6040516001600160a01b0390911681526020016102d1565b3480156104aa57600080fd5b50600061040a565b3480156104be57600080fd5b506103e76104cd366004613237565b610ced565b6103306104e036600461336b565b610f8d565b3480156104f157600080fd5b506103e76110f5565b34801561050657600080fd5b506103e7610515366004613135565b6111bb565b34801561052657600080fd5b506104866111c6565b34801561053b57600080fd5b506103e761054a366004613135565b6111fe565b34801561055b57600080fd5b5061019254610100900463ffffffff166102fb565b34801561057c57600080fd5b506103e77f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a3895381565b3480156105b057600080fd5b506102c56105bf366004613135565b61120b565b3480156105d057600080fd5b5061060f6105df3660046133fe565b6000828152610191602090815260408083206001600160a01b038516845260060190915290205460ff1692915050565b6040516102d19190613442565b34801561062857600080fd5b506102c5610637366004613118565b61124b565b34801561064857600080fd5b506102c5610657366004613118565b611256565b34801561066857600080fd5b506102c5610677366004613450565b611282565b34801561068857600080fd5b50610330610697366004613494565b6112ae565b3480156106a857600080fd5b506106bc6106b7366004613135565b6112f0565b6040516102d19695949392919061357e565b3480156106da57600080fd5b506103e77f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581565b34801561070e57600080fd5b5061033061071d366004613118565b61154e565b34801561072e57600080fd5b506102c561073d366004613135565b6115fd565b34801561074e57600080fd5b5061033061075d366004613636565b611608565b34801561076e57600080fd5b506102c561077d366004613135565b611649565b34801561078e57600080fd5b506103e76116ab565b3480156107a357600080fd5b506103306107b2366004613135565b6116b7565b3480156107c357600080fd5b506103306107d2366004613676565b6117a0565b3480156107e357600080fd5b506103306107f2366004613118565b61193b565b34801561080357600080fd5b506102c5610812366004613118565b611a19565b34801561082357600080fd5b50610330610832366004613135565b611a4d565b60006001600160e01b031982166304f9486b60e41b148061086857506001600160e01b03198216630bb5c60360e01b145b8061088357506001600160e01b031982166319e4acc160e01b145b8061089e57506001600160e01b0319821663288c314960e21b145b806108b957506001600160e01b0319821663281d205560e21b145b806108c857506108c882611a7f565b92915050565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a389539061090c906001600160a01b031630335b84600036611abf565b6001600160a01b03821660009081526101c3602052604090205460ff1615610985576001600160a01b03821660008181526101c36020908152604091829020805460ff1916905590519182527f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449291015b60405180910390a15b5050565b600081815261019160205260408120600381015460048201546001830154849291906109c590600160a81b900467ffffffffffffffff166111bb565b6109cf91906136f0565b6109d991906136f0565b60018301549091506109f7908290610100900463ffffffff16613703565b60048301546001840154610a1990610100900463ffffffff16620f42406136f0565b610a239190613703565b11949350505050565b6000610a39848484611b7b565b90505b9392505050565b6000610a4f6001611c63565b6001600160e01b0316905090565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a3895390610a96906001600160a01b03163033610903565b610a9f8261124b565b15610985576001610aae610a43565b11610acc5760405163091b060960e41b815260040160405180910390fd5b604080516001808252818301909252600091602080830190803683370190505090508281600081518110610b0257610b0261371a565b60200260200101906001600160a01b031690816001600160a01b031681525050610b2b81611cab565b6040516001600160a01b03841681527f9ebabfcf7586bd9e26cef64918d755359eb8b878650b23b77105b0963082e348906020015b60405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610bff5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c5a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610cc55760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610bf6565b610cce81611d92565b60408051600080825260208201909252610cea91839190611dcb565b50565b6000610cf833611256565b610d17576040516363a7ccd760e11b8152336004820152602401610bf6565b60006001610d2443611f6b565b0390506000610d3242611f6b565b9050610d6f338b8b84610d5d6101925467ffffffffffffffff69010000000000000000009091041690565b610d679087613730565b8d8d8d611fef565b60008181526101916020526040902060018101805467ffffffffffffffff851665010000000000026cffffffffffffffff000000000019909116179055909350610dd16101925467ffffffffffffffff69010000000000000000009091041690565b610ddb9083613730565b600182810180547fffffff00000000000000000000000000000000ffffffffffffffffffffffffff16600160681b67ffffffffffffffff948516027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff1617600160a81b93871693909302929092178083556101925460ff16929160ff1990911690836002811115610e6e57610e6e6131a0565b02179055506101925460018201805464ffffffff00191663ffffffff6101009384900416909202919091179055610ec9610eb167ffffffffffffffff85166111bb565b6101925465010000000000900463ffffffff16612055565b600282015560008481526101c26020526040902080546001600160a01b031916331790558615610efb57600881018790555b60005b88811015610f5a57816007018a8a83818110610f1c57610f1c61371a565b9050602002810190610f2e9190613751565b815460018101835560009283526020909220909160030201610f5082826137eb565b5050600101610efe565b506000866003811115610f6f57610f6f6131a0565b14610f7f57610f7f848787611608565b505050979650505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361101a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610bf6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110757f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146110e05760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610bf6565b6110e982611d92565b61098582826001611dcb565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111955760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610bf6565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b90565b60006108c8826111fe565b60006111f97f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b60006108c86001836120cc565b6000818152610191602052604081206002810154600382015460058301546004840154611238919061390f565b611242919061390f565b10159392505050565b60006108c882611a19565b6001600160a01b03811660009081526101c3602052604081205460ff16806108c857506108c88261124b565b6001600160a01b03821660009081526020819052604081206112a490836120cc565b6001149392505050565b60fb547fbba35d41610b7d25c8e486006535c76bd423091563e694d206ae3d71ce949fe5906112e7906001600160a01b03163033610903565b6109858261217f565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052819061134760405180606001604052806000815260200160008152602001600081525090565b600085815261019160205260408120606091906113638161234a565b81546040805160c08101909152600184018054939a5060ff9283169950909290918391166002811115611398576113986131a0565b60028111156113a9576113a96131a0565b8152815463ffffffff61010082041660208084019190915267ffffffffffffffff6501000000000083048116604080860191909152600160681b84048216606080870191909152600160a81b909404909116608085015260019094015460a090930192909252825190810183526003850154815260048501548183015260058501548184015260078501805484518185028101850190955280855294995090975091929060009084015b82821015611537576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916114a690613771565b80601f01602080910402602001604051908101604052809291908181526020018280546114d290613771565b801561151f5780601f106114f45761010080835404028352916020019161151f565b820191906000526020600020905b81548152906001019060200180831161150257829003601f168201915b50505050508152505081526020019060010190611453565b505050509250806008015491505091939550919395565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a3895390611587906001600160a01b03163033610903565b6001600160a01b03821660009081526101c3602052604090205460ff16610985576001600160a01b03821660008181526101c36020908152604091829020805460ff1916600117905590519182527fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914910161097c565b60006108c8826123ae565b33611614848285611b7b565b61163757838184604051631c2d2c9560e21b8152600401610bf693929190613922565b61164384848385612456565b50505050565b600081815261019160205260408120600581015460018201546116779190610100900463ffffffff16613703565b6004820154600183015461169990610100900463ffffffff16620f42406136f0565b6116a39190613703565b119392505050565b60006111f961015f5490565b60008181526101c260205260409020546001600160a01b031633146116ef57604051630c06b96b60e31b815260040160405180910390fd5b6000818152610191602052604090206117078161234a565b61172457604051630130de5f60e41b815260040160405180910390fd5b61172d42611f6b565b60018201805467ffffffffffffffff92909216600160681b027fffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffff9092169190911790556040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9060200161097c565b603254610100900460ff16158080156117c05750603254600160ff909116105b806117da5750303b1580156117da575060325460ff166001145b61184c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610bf6565b6032805460ff19166001179055801561186f576032805461ff0019166101001790555b611879858561264f565b6118b58383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506126cc92505050565b7fb620e3e201f5f19d6b1efcab4975cbe64774a344c7160f7d0b260f775b0085d883836040516118e6929190613945565b60405180910390a18015611934576032805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a3895390611974906001600160a01b03163033610903565b61197d8261124b565b610985576040805160018082528183019092526000916020808301908036833701905050905082816000815181106119b7576119b761371a565b60200260200101906001600160a01b031690816001600160a01b0316815250506119e0816126cc565b6040516001600160a01b03841681527f2973ec437ba0a6207102c44c409e03815ee1cc4624578ad40d3e4c50f978559190602001610b60565b6001600160a01b0381166000908152602081905260408120611a3a90611c63565b6001600160e01b03166001149050919050565b611a56816123ae565b611a7657604051639fefd0f160e01b815260048101829052602401610bf6565b610cea8161273b565b60006001600160e01b03198216634eedb53d60e01b1480611ab057506001600160e01b0319821663268c8a2f60e11b145b806108c857506108c8826128a3565b604051637ef7c88360e11b81526001600160a01b0387169063fdef910690611af390889088908890889088906004016139bc565b602060405180830381865afa158015611b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3491906139fa565b611b7357604051630cb6f8ed60e21b81526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401610bf6565b505050505050565b600083815261019160205260408120611b938161234a565b611ba1576000915050610a3c565b6000836003811115611bb557611bb56131a0565b03611bc4576000915050610a3c565b6001810154611be5908590600160a81b900467ffffffffffffffff16611282565b611bf3576000915050610a3c565b6001600160a01b038416600090815260068201602052604081205460ff166003811115611c2257611c226131a0565b14158015611c4957506002600182015460ff166002811115611c4657611c466131a0565b14155b15611c58576000915050610a3c565b506001949350505050565b80546000908015611ca257611c8b83611c7d6001846136f0565b600091825260209091200190565b5464010000000090046001600160e01b0316610a3c565b60009392505050565b60005b8151811015611d7a57611cd9828281518110611ccc57611ccc61371a565b6020026020010151611a19565b611d2057818181518110611cef57611cef61371a565b602002602001015160405163c0b7477d60e01b8152600401610bf691906001600160a01b0391909116815260200190565b611d706000806000858581518110611d3a57611d3a61371a565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206128c890919063ffffffff16565b5050600101611cae565b508051611d8d906001906128fe90612903565b505050565b60fb547f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f590610985906001600160a01b03163033610903565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611dfe57611d8d8361293b565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e58575060408051601f3d908101601f19168201909252611e5591810190613a17565b60015b611eca5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610bf6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611f5f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610bf6565b50611d8d8383836129f9565b600067ffffffffffffffff821115611feb5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f34206269747300000000000000000000000000000000000000000000000000006064820152608401610bf6565b5090565b6000611ff9612a1e565b9050886001600160a01b0316817fa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c9288888c8c8a8a8a6040516120419796959493929190613a30565b60405180910390a398975050505050505050565b6000620f42408211156120875760405163cc80c19560e01b8152620f4240600482015260248101839052604401610bf6565b6120918284613703565b925060006120a2620f424085613b56565b90506120b1620f424085613b6a565b915080156120c5576120c282613b7e565b91505b5092915050565b600043821061211d5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610bf6565b600061212883612a39565b8454909150600061213b86848385612ab5565b905080156121695761215286611c7d6001846136f0565b5464010000000090046001600160e01b031661216c565b60005b6001600160e01b03169695505050505050565b61218d6001620f42406136f0565b61219d6040830160208401613ba9565b63ffffffff1611156121ef576121b76001620f42406136f0565b6121c76040830160208401613ba9565b60405163cc80c19560e01b8152600481019290925263ffffffff166024820152604401610bf6565b620f42406122036060830160408401613ba9565b63ffffffff16111561222357620f42406121c76060830160408401613ba9565b610e106122366080830160608401613bdc565b67ffffffffffffffff16101561228657610e106122596080830160608401613bdc565b60405163e50f130b60e01b815267ffffffffffffffff928316600482015291166024820152604401610bf6565b6301e1338061229b6080830160608401613bdc565b67ffffffffffffffff1611156122c0576301e133806122596080830160608401613bdc565b806101926122ce8282613c06565b507f9bc877d101aebcec08ab88cedabc5580ce4f2b55a1c58ad627439199a4dc4a3e90506122ff6020830183613cd5565b61230f6040840160208501613ba9565b61231f6060850160408601613ba9565b61232f6080860160608701613bdc565b60405161233f9493929190613cf2565b60405180910390a150565b60008061235642611f6b565b600184015490915067ffffffffffffffff80831665010000000000909204161180159061239b5750600183015467ffffffffffffffff600160681b9091048116908216105b8015610a3c575050905460ff1615919050565b600081815261019160205260408120805460ff16156123d05750600092915050565b6123d98161234a565b156124215760018082015460ff1660028111156123f8576123f86131a0565b146124065750600092915050565b61240f83610989565b61241c5750600092915050565b612437565b61242a83611649565b6124375750600092915050565b6124408361120b565b61244d5750600092915050565b50600192915050565b6000848152610191602090815260408083206001600160a01b0386168452600681019092529091205460ff166002816003811115612496576124966131a0565b036124b65760048201546124ac906001906136f0565b600483015561251a565b60038160038111156124ca576124ca6131a0565b036124ea5760058201546124e0906001906136f0565b600583015561251a565b60018160038111156124fe576124fe6131a0565b0361251a576003820154612514906001906136f0565b60038301555b600285600381111561252e5761252e6131a0565b0361254d57600482015461254390600161390f565b60048301556125af565b6003856003811115612561576125616131a0565b0361258057600582015461257690600161390f565b60058301556125af565b6001856003811115612594576125946131a0565b036125af5760038201546125a990600161390f565b60038301555b6001600160a01b03841660009081526006830160205260409020805486919060ff191660018360038111156125e6576125e66131a0565b0217905550836001600160a01b0316867fb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d906792876001604051612628929190613d2d565b60405180910390a38280156126415750612641866123ae565b15611b7357611b738661273b565b603254610100900460ff166126ba5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf6565b6126c382612b16565b6109858161217f565b60005b8151811015612728576126ed828281518110611ccc57611ccc61371a565b1561270457818181518110611cef57611cef61371a565b61271e6001600080858581518110611d3a57611d3a61371a565b50506001016126cf565b508051611d8d90600190612b8a90612903565b600081815261019160205260409020805460ff19166001179055611d8d61276a60fb546001600160a01b031690565b826101916000858152602001908152602001600020600701805480602002602001604051908101604052809291908181526020016000905b82821015612886576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916127f590613771565b80601f016020809104026020016040519081016040528092919081815260200182805461282190613771565b801561286e5780601f106128435761010080835404028352916020019161286e565b820191906000526020600020905b81548152906001019060200180831161285157829003601f168201915b505050505081525050815260200190600101906127a2565b505050600086815261019160205260409020600801549050612b8e565b60006001600160e01b0319821663368d719960e21b14806108c857506108c882612c44565b6000806128e6846128d843612a39565b6128e186612c94565b612d13565b6001600160e01b0391821693501690505b9250929050565b900390565b60008061292e8561292961291688611c63565b6001600160e01b0316868863ffffffff16565b6128c8565b915091505b935093915050565b6001600160a01b0381163b6129b85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610bf6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b612a0283612eb6565b600082511180612a0f5750805b15611d8d576116438383612ef6565b6000612a286116ab565b90506111b861015f80546001019055565b600063ffffffff821115611feb5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610bf6565b60005b81831015612b0b576000612acc8484612f1b565b60008781526020902090915063ffffffff86169082015463ffffffff161115612af757809250612b05565b612b0281600161390f565b93505b50612ab8565b50805b949350505050565b603254610100900460ff16612b815760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf6565b610cea81612f36565b0190565b6040516331c6fcc960e21b81526060906000906001600160a01b0387169063c71bf32490612bc490889088908890600401613d48565b6000604051808303816000875af1158015612be3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c0b9190810190613d71565b604051919350915085907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a294509492505050565b60006001600160e01b0319821663041de68360e41b1480612c7557506001600160e01b031982166352d1902d60e01b145b806108c857506301ffc9a760e01b6001600160e01b03198316146108c8565b60006001600160e01b03821115611feb5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610bf6565b825460009081908015612e5c576000612d3187611c7d6001856136f0565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015612db35760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610bf6565b805163ffffffff808816911603612dfc5784612dd488611c7d6001866136f0565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055612e4c565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b6020015192508391506129339050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316640100000000029190931617920191909155905081612933565b612ebf8161293b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610a3c8383604051806060016040528060278152602001613e9d60279139612fc3565b6000612f2a6002848418613b6a565b610a3c9084841661390f565b603254610100900460ff16612fa15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf6565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b031685604051612fe09190613e77565b600060405180830381855af49150503d806000811461301b576040519150601f19603f3d011682016040523d82523d6000602084013e613020565b606091505b50915091506130318683838761303b565b9695505050505050565b606083156130aa5782516000036130a3576001600160a01b0385163b6130a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bf6565b5081612b0e565b612b0e83838151156130bf5781518083602001fd5b8060405162461bcd60e51b8152600401610bf69190613e89565b6000602082840312156130eb57600080fd5b81356001600160e01b031981168114610a3c57600080fd5b6001600160a01b0381168114610cea57600080fd5b60006020828403121561312a57600080fd5b8135610a3c81613103565b60006020828403121561314757600080fd5b5035919050565b80356004811061315d57600080fd5b919050565b60008060006060848603121561317757600080fd5b83359250602084013561318981613103565b91506131976040850161314e565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60038110610cea57610cea6131a0565b602081016131d3836131b6565b91905290565b60008083601f8401126131eb57600080fd5b50813567ffffffffffffffff81111561320357600080fd5b6020830191508360208260051b85010111156128f757600080fd5b8015158114610cea57600080fd5b803561315d8161321e565b600080600080600080600060a0888a03121561325257600080fd5b873567ffffffffffffffff8082111561326a57600080fd5b818a0191508a601f83011261327e57600080fd5b81358181111561328d57600080fd5b8b602082850101111561329f57600080fd5b6020928301995097509089013590808211156132ba57600080fd5b506132c78a828b016131d9565b909650945050604088013592506132e06060890161314e565b91506132ee6080890161322c565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561333b5761333b6132fc565b604052919050565b600067ffffffffffffffff82111561335d5761335d6132fc565b50601f01601f191660200190565b6000806040838503121561337e57600080fd5b823561338981613103565b9150602083013567ffffffffffffffff8111156133a557600080fd5b8301601f810185136133b657600080fd5b80356133c96133c482613343565b613312565b8181528660208385010111156133de57600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000806040838503121561341157600080fd5b82359150602083013561342381613103565b809150509250929050565b6004811061343e5761343e6131a0565b9052565b602081016108c8828461342e565b6000806040838503121561346357600080fd5b823561346e81613103565b946020939093013593505050565b60006080828403121561348e57600080fd5b50919050565b6000608082840312156134a657600080fd5b610a3c838361347c565b60005b838110156134cb5781810151838201526020016134b3565b50506000910152565b600081518084526134ec8160208601602086016134b0565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015613571578284038952815180516001600160a01b03168552858101518686015260409081015160609186018290529061355d818701836134d4565b9a87019a955050509084019060010161351e565b5091979650505050505050565b60006101a088151583528715156020840152865161359b816131b6565b8060408501525063ffffffff6020880151166060840152604087015167ffffffffffffffff80821660808601528060608a01511660a08601528060808a01511660c0860152505060a087015160e084015261360e6101008401878051825260208082015190830152604090810151910152565b8061016084015261362181840186613500565b91505082610180830152979650505050505050565b60008060006060848603121561364b57600080fd5b8335925061365b6020850161314e565b9150604084013561366b8161321e565b809150509250925092565b60008060008060c0858703121561368c57600080fd5b843561369781613103565b93506136a6866020870161347c565b925060a085013567ffffffffffffffff8111156136c257600080fd5b6136ce878288016131d9565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108c8576108c86136da565b80820281158282048414176108c8576108c86136da565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff8181168382160190808211156120c5576120c56136da565b60008235605e1983360301811261376757600080fd5b9190910192915050565b600181811c9082168061378557607f821691505b60208210810361348e57634e487b7160e01b600052602260045260246000fd5b601f821115611d8d57600081815260208120601f850160051c810160208610156137cc5750805b601f850160051c820191505b81811015611b73578281556001016137d8565b81356137f681613103565b6001600160a01b0381166001600160a01b031983541617825550600160208084013582840155600283016040850135601e1986360301811261383757600080fd5b8501803567ffffffffffffffff81111561385057600080fd5b803603848301131561386157600080fd5b6138758161386f8554613771565b856137a5565b6000601f8211600181146138ab576000831561389357508382018601355b600019600385901b1c1916600184901b178555613904565b600085815260209020601f19841690835b828110156138db578685018901358255938801939089019088016138bc565b50848210156138fa5760001960f88660031b161c198885880101351681555b50508683881b0185555b505050505050505050565b808201808211156108c8576108c86136da565b8381526001600160a01b038316602082015260608101612b0e604083018461342e565b60208082528181018390526000908460408401835b8681101561398857823561396d81613103565b6001600160a01b03168252918301919083019060010161395a565b509695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b038088168352808716602084015250846040830152608060608301526139ef608083018486613993565b979650505050505050565b600060208284031215613a0c57600080fd5b8151610a3c8161321e565b600060208284031215613a2957600080fd5b5051919050565b600067ffffffffffffffff808a1683526020818a1681850152604060a081860152613a5f60a086018a8c613993565b606086820381880152818983528483019050848a60051b8401018b60005b8c811015613b2257858303601f190184528135368f9003605e19018112613aa357600080fd5b8e018035613ab081613103565b6001600160a01b0316845280890135898501528781013536829003601e19018112613ada57600080fd5b0188810190358a811115613aed57600080fd5b803603821315613afc57600080fd5b8689860152613b0e8786018284613993565b958a01959450505090870190600101613a7d565b50508097505050505050505082608083015298975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082613b6557613b65613b40565b500690565b600082613b7957613b79613b40565b500490565b600060018201613b9057613b906136da565b5060010190565b63ffffffff81168114610cea57600080fd5b600060208284031215613bbb57600080fd5b8135610a3c81613b97565b67ffffffffffffffff81168114610cea57600080fd5b600060208284031215613bee57600080fd5b8135610a3c81613bc6565b60038110610cea57600080fd5b8135613c1181613bf9565b613c1a816131b6565b815460ff821691508160ff1982161783556020840135613c3981613b97565b64ffffffff008160081b169050808364ffffffffff198416171784556040850135613c6381613b97565b68ffffffff00000000008160281b169050808468ffffffffffffffffff1985161783171785556060860135613c9781613bc6565b70ffffffffffffffffffffffffffffffffff1993909316909317179190911760489190911b70ffffffffffffffff0000000000000000001617905550565b600060208284031215613ce757600080fd5b8135610a3c81613bf9565b60808101613cff866131b6565b94815263ffffffff938416602082015291909216604082015267ffffffffffffffff90911660609091015290565b60408101613d3b828561342e565b8260208301529392505050565b838152606060208201526000613d616060830185613500565b9050826040830152949350505050565b6000806040808486031215613d8557600080fd5b835167ffffffffffffffff80821115613d9d57600080fd5b818601915086601f830112613db157600080fd5b8151602082821115613dc557613dc56132fc565b8160051b613dd4828201613312565b928352848101820192828101908b851115613dee57600080fd5b83870192505b84831015613e6357825186811115613e0c5760008081fd5b8701603f81018d13613e1e5760008081fd5b84810151613e2e6133c482613343565b8181528e8b838501011115613e435760008081fd5b613e52828883018d86016134b0565b845250509183019190830190613df4565b9990920151989a9899505050505050505050565b600082516137678184602087016134b0565b602081526000610a3c60208301846134d456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000811000a'

type MainVotingPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MainVotingPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MainVotingPlugin__factory extends ContractFactory {
  constructor(...args: MainVotingPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainVotingPlugin> {
    return super.deploy(overrides || {}) as Promise<MainVotingPlugin>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): MainVotingPlugin {
    return super.attach(address) as MainVotingPlugin
  }
  override connect(signer: Signer): MainVotingPlugin__factory {
    return super.connect(signer) as MainVotingPlugin__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MainVotingPluginInterface {
    return new utils.Interface(_abi) as MainVotingPluginInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainVotingPlugin {
    return new Contract(address, _abi, signerOrProvider) as MainVotingPlugin
  }
}
