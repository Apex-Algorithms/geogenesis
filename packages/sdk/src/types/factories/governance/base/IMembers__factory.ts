/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IMembers,
  IMembersInterface,
} from '../../../governance/base/IMembers'
import type { Provider } from '@ethersproject/providers'
import { Contract, Signer, utils } from 'ethers'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'MemberAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'MemberRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isMember',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

export class IMembers__factory {
  static readonly abi = _abi
  static createInterface(): IMembersInterface {
    return new utils.Interface(_abi) as IMembersInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMembers {
    return new Contract(address, _abi, signerOrProvider) as IMembers
  }
}
