/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MainVotingPlugin,
  MainVotingPluginInterface,
} from '../MainVotingPlugin'
import type { PromiseOrValue } from '../common'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dao',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    name: 'DaoUnauthorized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'limit',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'actual',
        type: 'uint64',
      },
    ],
    name: 'DateOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'member',
        type: 'address',
      },
    ],
    name: 'InvalidAddresslistUpdate',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'limit',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'actual',
        type: 'uint64',
      },
    ],
    name: 'MinDurationOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoEditorsLeft',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
    ],
    name: 'NotAMember',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyCreatorCanCancel',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'OnlyOneEditorPerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ProposalCreationForbidden',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecutionForbidden',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ProposalIsNotOpen',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'actual',
        type: 'uint256',
      },
    ],
    name: 'RatioOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: 'voteOption',
        type: 'uint8',
      },
    ],
    name: 'VoteCastForbidden',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'members',
        type: 'address[]',
      },
    ],
    name: 'MembersAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'members',
        type: 'address[]',
      },
    ],
    name: 'MembersRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'definingContract',
        type: 'address',
      },
    ],
    name: 'MembershipContractAnnounced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'startDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'endDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    name: 'ProposalCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'voter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'enum IMajorityVoting.VoteOption',
        name: 'voteOption',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'votingPower',
        type: 'uint256',
      },
    ],
    name: 'VoteCast',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'enum MajorityVotingBase.VotingMode',
        name: 'votingMode',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'supportThreshold',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'minParticipation',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'minDuration',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minProposerVotingPower',
        type: 'uint256',
      },
    ],
    name: 'VotingSettingsUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPDATE_ADDRESSES_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPDATE_VOTING_SETTINGS_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_PLUGIN_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_members',
        type: 'address[]',
      },
    ],
    name: 'addAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'addresslistLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'addresslistLengthAtBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'canExecute',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_voter',
        type: 'address',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
    ],
    name: 'canVote',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'cancelProposal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: '_actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '_allowFailureMap',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
      {
        internalType: 'bool',
        name: '_tryEarlyExecution',
        type: 'bool',
      },
    ],
    name: 'createProposal',
    outputs: [
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'contract IDAO',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'getProposal',
    outputs: [
      {
        internalType: 'bool',
        name: 'open',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'executed',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'startDate',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'endDate',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'snapshotBlock',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'minVotingPower',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.ProposalParameters',
        name: 'parameters',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'abstain',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'yes',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'no',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.Tally',
        name: 'tally',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_voter',
        type: 'address',
      },
    ],
    name: 'getVoteOption',
    outputs: [
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDAO',
        name: '_dao',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minParticipation',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'minDuration',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'minProposerVotingPower',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.VotingSettings',
        name: '_votingSettings',
        type: 'tuple',
      },
      {
        internalType: 'address[]',
        name: '_initialEditors',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isEditor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isListed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'isListedAtBlock',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isMember',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isMinParticipationReached',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isSupportThresholdReached',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
    ],
    name: 'isSupportThresholdReachedEarly',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minDuration',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minParticipation',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minProposerVotingPower',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pluginType',
    outputs: [
      {
        internalType: 'enum IPlugin.PluginType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proposalCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_members',
        type: 'address[]',
      },
    ],
    name: 'removeAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'supportThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'totalVotingPower',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum MajorityVotingBase.VotingMode',
            name: 'votingMode',
            type: 'uint8',
          },
          {
            internalType: 'uint32',
            name: 'supportThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minParticipation',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'minDuration',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'minProposerVotingPower',
            type: 'uint256',
          },
        ],
        internalType: 'struct MajorityVotingBase.VotingSettings',
        name: '_votingSettings',
        type: 'tuple',
      },
    ],
    name: 'updateVotingSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_proposalId',
        type: 'uint256',
      },
      {
        internalType: 'enum IMajorityVoting.VoteOption',
        name: '_voteOption',
        type: 'uint8',
      },
      {
        internalType: 'bool',
        name: '_tryEarlyExecution',
        type: 'bool',
      },
    ],
    name: 'vote',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'votingMode',
    outputs: [
      {
        internalType: 'enum MajorityVotingBase.VotingMode',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b603254610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60325460ff90811614620000e5576032805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051613d866200011f60003960008181610a2701528181610aac01528181610ba201528181610c270152610d0d0152613d866000f3fe6080604052600436106102855760003560e01c80638377c46011610153578063c7f758a8116100cb578063da35c6641161007f578063f60046b211610064578063f60046b21461079c578063f794062e146107b2578063fe0d94c1146107d257600080fd5b8063da35c66414610767578063e0a8f6f51461077c57600080fd5b8063cc63604a116100b0578063cc63604a14610707578063ce6366c414610727578063cf1311491461074757600080fd5b8063c7f758a8146106a1578063c9c4bfca146106d357600080fd5b8063a074815411610122578063a84eb99911610107578063a84eb99914610641578063b1bb8d2614610661578063c147210e1461068157600080fd5b8063a074815414610601578063a230c5241461062157600080fd5b80638377c460146105355780638a4b00f814610569578063970601d8146105895780639cba3021146105e157600080fd5b80633659cfe611610201578063536f9f42116101b55780635c60da1b1161019a5780635c60da1b146104df5780636a6b2d86146104f45780637c36e8e81461051457600080fd5b8063536f9f421461047e578063567157611461049e57600080fd5b806341de6830116101e657806341de6830146104425780634f1ef2861461045657806352d1902d1461046957600080fd5b80633659cfe6146103f05780634162169f1461041057600080fd5b806317d1b4041161025857806323d071881161023d57806323d071881461039957806327f1608d146103bb5780633628731c146103d057600080fd5b806317d1b404146103375780631befc4051461035757600080fd5b806301ffc9a71461028a578063054fd2c2146102bf5780630de21856146102f55780630dfb278e14610315575b600080fd5b34801561029657600080fd5b506102aa6102a5366004612edc565b6107f2565b60405190151581526020015b60405180910390f35b3480156102cb57600080fd5b506101925465010000000000900463ffffffff165b60405163ffffffff90911681526020016102b6565b34801561030157600080fd5b506102aa610310366004612f06565b610853565b34801561032157600080fd5b50610335610330366004612f37565b6108f6565b005b34801561034357600080fd5b506102aa610352366004612f7c565b610941565b34801561036357600080fd5b5061038b7fbba35d41610b7d25c8e486006535c76bd423091563e694d206ae3d71ce949fe581565b6040519081526020016102b6565b3480156103a557600080fd5b506101925460ff165b6040516102b69190612fe0565b3480156103c757600080fd5b5061038b610958565b3480156103dc57600080fd5b506103356103eb366004613038565b610972565b3480156103fc57600080fd5b5061033561040b36600461307a565b610a1d565b34801561041c57600080fd5b5060fb546001600160a01b03165b6040516001600160a01b0390911681526020016102b6565b34801561044e57600080fd5b5060006103ae565b610335610464366004613106565b610b98565b34801561047557600080fd5b5061038b610d00565b34801561048a57600080fd5b5061038b610499366004612f06565b610dc6565b3480156104aa57600080fd5b50610192546901000000000000000000900467ffffffffffffffff1660405167ffffffffffffffff90911681526020016102b6565b3480156104eb57600080fd5b5061042a610dd1565b34801561050057600080fd5b5061038b61050f366004612f06565b610e09565b34801561052057600080fd5b5061019254610100900463ffffffff166102e0565b34801561054157600080fd5b5061038b7f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a3895381565b34801561057557600080fd5b506102aa610584366004612f06565b610e16565b34801561059557600080fd5b506105d46105a4366004613199565b6000828152610191602090815260408083206001600160a01b038516845260060190915290205460ff1692915050565b6040516102b691906131dd565b3480156105ed57600080fd5b5061038b6105fc366004613225565b610e56565b34801561060d57600080fd5b506102aa61061c36600461307a565b6110f8565b34801561062d57600080fd5b506102aa61063c36600461307a565b611103565b34801561064d57600080fd5b5061033561065c366004613038565b6111b7565b34801561066d57600080fd5b506102aa61067c36600461330a565b611278565b34801561068d57600080fd5b5061033561069c366004613336565b6112a4565b3480156106ad57600080fd5b506106c16106bc366004612f06565b61140d565b6040516102b696959493929190613468565b3480156106df57600080fd5b5061038b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581565b34801561071357600080fd5b506102aa610722366004612f06565b61166b565b34801561073357600080fd5b50610335610742366004613520565b611676565b34801561075357600080fd5b506102aa610762366004612f06565b6116b7565b34801561077357600080fd5b5061038b611719565b34801561078857600080fd5b50610335610797366004612f06565b611725565b3480156107a857600080fd5b506101935461038b565b3480156107be57600080fd5b506102aa6107cd36600461307a565b611815565b3480156107de57600080fd5b506103356107ed366004612f06565b611849565b60006001600160e01b03198216635d65affb60e01b148061082357506001600160e01b03198216630bb5c60360e01b145b8061083e57506001600160e01b0319821663288c314960e21b145b8061084d575061084d8261187b565b92915050565b6000818152610191602052604081206003810154600482015460018301548492919061088f90600160a81b900467ffffffffffffffff16610dc6565b6108999190613576565b6108a39190613576565b60018301549091506108c1908290610100900463ffffffff16613589565b600483015460018401546108e390610100900463ffffffff16620f4240613576565b6108ed9190613589565b11949350505050565b60fb547fbba35d41610b7d25c8e486006535c76bd423091563e694d206ae3d71ce949fe590610934906001600160a01b031630335b846000366118bb565b61093d82611977565b5050565b600061094e848484611b48565b90505b9392505050565b60006109646001611c30565b6001600160e01b0316905090565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a38953906109ab906001600160a01b0316303361092b565b60018211156109d557604051632088eaa160e11b8152600481018390526024015b60405180910390fd5b6109df8383611c78565b7f11ba20e083ffba533caf1d501ce171aa2acdc05a5601e4e473e449460b0718d88383604051610a109291906135a0565b60405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610aaa5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016109cc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b057f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610b705760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016109cc565b610b7981611d65565b60408051600080825260208201909252610b9591839190611d9e565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c255760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016109cc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610ceb5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016109cc565b610cf482611d65565b61093d82826001611d9e565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610da05760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016109cc565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b90565b600061084d82610e09565b6000610e047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b600061084d600183611f43565b6000818152610191602052604081206002810154600382015460058301546004840154610e4391906135ee565b610e4d91906135ee565b10159392505050565b6000610e6133611103565b610e80576040516363a7ccd760e11b81523360048201526024016109cc565b60006001610e8d43611ff6565b0390506000610e9b42611ff6565b9050610ed8338d8d84610ec66101925467ffffffffffffffff69010000000000000000009091041690565b610ed09087613601565b8f8f8f61207a565b60008181526101916020526040902060018101805467ffffffffffffffff851665010000000000026cffffffffffffffff000000000019909116179055909350610f3a6101925467ffffffffffffffff69010000000000000000009091041690565b610f449083613601565b600182810180547fffffff00000000000000000000000000000000ffffffffffffffffffffffffff16600160681b67ffffffffffffffff948516027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff1617600160a81b93871693909302929092178083556101925460ff16929160ff1990911690836002811115610fd757610fd7612fba565b02179055506101925460018201805464ffffffff00191663ffffffff610100938490041690920291909117905561103261101a67ffffffffffffffff8516610dc6565b6101925465010000000000900463ffffffff166120e0565b600282015560008481526101c36020526040902080546001600160a01b03191633179055881561106457600881018990555b60005b8a8110156110c357816007018c8c8381811061108557611085613622565b90506020028101906110979190613638565b8154600181018355600092835260209092209091600302016110b982826136d2565b5050600101611067565b5060008660038111156110d8576110d8612fba565b146110e8576110e8848787611676565b5050509998505050505050505050565b600061084d82611815565b600061110e826110f8565b8061084d575060fb5460408051602081018252600081529051637ef7c88360e11b81526001600160a01b039092169163fdef91069161117691309187917f6fd388bae34ebf69f2f68ae03174c1b3616db3ac7aecc5ce2f8578586736532491906004016137f6565b602060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d9190613828565b60fb547f37c20ba3fe5e4e1eb04b4bdb30d528f9d2d37a43a745d3976dffa671d4a38953906111f0906001600160a01b0316303361092b565b600182111561121557604051632088eaa160e11b8152600481018390526024016109cc565b600161121f610958565b1161123d5760405163091b060960e41b815260040160405180910390fd5b6112478383612157565b7f0ba413f7646035cae0a4ee999d676078fc8a763d1a36a8ef25e4c10f67d8615d8383604051610a109291906135a0565b6001600160a01b038216600090815260208190526040812061129a9083611f43565b6001149392505050565b603254610100900460ff16158080156112c45750603254600160ff909116105b806112de5750303b1580156112de575060325460ff166001145b6113505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016109cc565b6032805460ff191660011790558015611373576032805461ff0019166101001790555b61137d85856121c0565b6113878383611c78565b7f11ba20e083ffba533caf1d501ce171aa2acdc05a5601e4e473e449460b0718d883836040516113b89291906135a0565b60405180910390a18015611406576032805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052819061146460405180606001604052806000815260200160008152602001600081525090565b600085815261019160205260408120606091906114808161223d565b81546040805160c08101909152600184018054939a5060ff92831699509092909183911660028111156114b5576114b5612fba565b60028111156114c6576114c6612fba565b8152815463ffffffff61010082041660208084019190915267ffffffffffffffff6501000000000083048116604080860191909152600160681b84048216606080870191909152600160a81b909404909116608085015260019094015460a090930192909252825190810183526003850154815260048501548183015260058501548184015260078501805484518185028101850190955280855294995090975091929060009084015b82821015611654576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916115c390613658565b80601f01602080910402602001604051908101604052809291908181526020018280546115ef90613658565b801561163c5780601f106116115761010080835404028352916020019161163c565b820191906000526020600020905b81548152906001019060200180831161161f57829003601f168201915b50505050508152505081526020019060010190611570565b505050509250806008015491505091939550919395565b600061084d826122a1565b33611682848285611b48565b6116a557838184604051631c2d2c9560e21b81526004016109cc93929190613845565b6116b184848385612349565b50505050565b600081815261019160205260408120600581015460018201546116e59190610100900463ffffffff16613589565b6004820154600183015461170790610100900463ffffffff16620f4240613576565b6117119190613589565b119392505050565b6000610e0461015f5490565b60008181526101c360205260409020546001600160a01b0316331461175d57604051630c06b96b60e31b815260040160405180910390fd5b6000818152610191602052604090206117758161223d565b61179257604051630130de5f60e41b815260040160405180910390fd5b61179b42611ff6565b60018201805467ffffffffffffffff92909216600160681b027fffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffff9092169190911790556040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9060200160405180910390a15050565b6001600160a01b038116600090815260208190526040812061183690611c30565b6001600160e01b03166001149050919050565b611852816122a1565b61187257604051639fefd0f160e01b8152600481018290526024016109cc565b610b958161253e565b60006001600160e01b0319821663433c580f60e11b14806118ac57506001600160e01b0319821663268c8a2f60e11b145b8061084d575061084d826126a6565b604051637ef7c88360e11b81526001600160a01b0387169063fdef9106906118ef9088908890889088908890600401613891565b602060405180830381865afa15801561190c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119309190613828565b61196f57604051630cb6f8ed60e21b81526001600160a01b038088166004830152808716602483015285166044820152606481018490526084016109cc565b505050505050565b6119856001620f4240613576565b61199560408301602084016138e1565b63ffffffff1611156119e7576119af6001620f4240613576565b6119bf60408301602084016138e1565b60405163cc80c19560e01b8152600481019290925263ffffffff1660248201526044016109cc565b620f42406119fb60608301604084016138e1565b63ffffffff161115611a1b57620f42406119bf60608301604084016138e1565b610e10611a2e60808301606084016138fe565b67ffffffffffffffff161015611a7e57610e10611a5160808301606084016138fe565b60405163628819f760e11b815267ffffffffffffffff9283166004820152911660248201526044016109cc565b6301e13380611a9360808301606084016138fe565b67ffffffffffffffff161115611ab8576301e13380611a5160808301606084016138fe565b80610192611ac68282613935565b507fa8a18d06ddd19f24a872740e3d364c86f62be25f7154525dda18ef07fda46f3e9050611af76020830183613a0a565b611b0760408401602085016138e1565b611b1760608501604086016138e1565b611b2760808601606087016138fe565b8560800135604051611b3d959493929190613a27565b60405180910390a150565b600083815261019160205260408120611b608161223d565b611b6e576000915050610951565b6000836003811115611b8257611b82612fba565b03611b91576000915050610951565b6001810154611bb2908590600160a81b900467ffffffffffffffff16611278565b611bc0576000915050610951565b6001600160a01b038416600090815260068201602052604081205460ff166003811115611bef57611bef612fba565b14158015611c1657506002600182015460ff166002811115611c1357611c13612fba565b14155b15611c25576000915050610951565b506001949350505050565b80546000908015611c6f57611c5883611c4a600184613576565b600091825260209091200190565b5464010000000090046001600160e01b0316610951565b60009392505050565b60005b81811015611d5657611cad838383818110611c9857611c98613622565b90506020020160208101906107cd919061307a565b15611cfe57828282818110611cc457611cc4613622565b9050602002016020810190611cd9919061307a565b60405163c0b7477d60e01b81526001600160a01b0390911660048201526024016109cc565b611d4c6001600080868686818110611d1857611d18613622565b9050602002016020810190611d2d919061307a565b6001600160a01b031681526020810191909152604001600020906126cb565b5050600101611c7b565b506116b1600161270183612705565b60fb547f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f59061093d906001600160a01b0316303361092b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611dd657611dd18361273d565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e30575060408051601f3d908101601f19168201909252611e2d91810190613a63565b60015b611ea25760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016109cc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611f375760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016109cc565b50611dd18383836127fb565b6000438210611f945760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e656460448201526064016109cc565b6000611f9f83612820565b84549091506000611fb28684838561289c565b90508015611fe057611fc986611c4a600184613576565b5464010000000090046001600160e01b0316611fe3565b60005b6001600160e01b03169695505050505050565b600067ffffffffffffffff8211156120765760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016109cc565b5090565b60006120846128fd565b9050886001600160a01b0316817fa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c9288888c8c8a8a8a6040516120cc9796959493929190613a7c565b60405180910390a398975050505050505050565b6000620f42408211156121125760405163cc80c19560e01b8152620f42406004820152602481018390526044016109cc565b61211c8284613589565b9250600061212d620f424085613ba2565b905061213c620f424085613bb6565b915080156121505761214d82613bca565b91505b5092915050565b60005b818110156121b157612177838383818110611c9857611c98613622565b61218d57828282818110611cc457611cc4613622565b6121a76000806000868686818110611d1857611d18613622565b505060010161215a565b506116b1600161291883612705565b603254610100900460ff1661222b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109cc565b6122348261291d565b61093d81611977565b60008061224942611ff6565b600184015490915067ffffffffffffffff80831665010000000000909204161180159061228e5750600183015467ffffffffffffffff600160681b9091048116908216105b8015610951575050905460ff1615919050565b600081815261019160205260408120805460ff16156122c35750600092915050565b6122cc8161223d565b156123145760018082015460ff1660028111156122eb576122eb612fba565b146122f95750600092915050565b61230283610853565b61230f5750600092915050565b61232a565b61231d836116b7565b61232a5750600092915050565b61233383610e16565b6123405750600092915050565b50600192915050565b6000848152610191602090815260408083206001600160a01b0386168452600681019092529091205460ff16600281600381111561238957612389612fba565b036123a957600482015461239f90600190613576565b600483015561240d565b60038160038111156123bd576123bd612fba565b036123dd5760058201546123d390600190613576565b600583015561240d565b60018160038111156123f1576123f1612fba565b0361240d57600382015461240790600190613576565b60038301555b600285600381111561242157612421612fba565b036124405760048201546124369060016135ee565b60048301556124a2565b600385600381111561245457612454612fba565b036124735760058201546124699060016135ee565b60058301556124a2565b600185600381111561248757612487612fba565b036124a257600382015461249c9060016135ee565b60038301555b6001600160a01b03841660009081526006830160205260409020805486919060ff191660018360038111156124d9576124d9612fba565b0217905550836001600160a01b0316867fb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d90679287600160405161251b929190613be3565b60405180910390a38280156125345750612534866122a1565b1561196f5761196f865b600081815261019160205260409020805460ff19166001179055611dd161256d60fb546001600160a01b031690565b826101916000858152602001908152602001600020600701805480602002602001604051908101604052809291908181526020016000905b82821015612689576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916125f890613658565b80601f016020809104026020016040519081016040528092919081815260200182805461262490613658565b80156126715780601f1061264657610100808354040283529160200191612671565b820191906000526020600020905b81548152906001019060200180831161265457829003601f168201915b505050505081525050815260200190600101906125a5565b505050600086815261019160205260409020600801549050612991565b60006001600160e01b0319821663368d719960e21b148061084d575061084d82612a47565b6000806126e9846126db43612820565b6126e486612a97565b612b16565b6001600160e01b0391821693501690505b9250929050565b0190565b6000806127308561272b61271888611c30565b6001600160e01b0316868863ffffffff16565b6126cb565b915091505b935093915050565b6001600160a01b0381163b6127ba5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016109cc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b61280483612cb9565b6000825111806128115750805b15611dd1576116b18383612cf9565b600063ffffffff8211156120765760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016109cc565b60005b818310156128f25760006128b38484612d1e565b60008781526020902090915063ffffffff86169082015463ffffffff1611156128de578092506128ec565b6128e98160016135ee565b93505b5061289f565b50805b949350505050565b6000612907611719565b9050610dc361015f80546001019055565b900390565b603254610100900460ff166129885760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109cc565b610b9581612d39565b6040516331c6fcc960e21b81526060906000906001600160a01b0387169063c71bf324906129c790889088908890600401613bfe565b6000604051808303816000875af11580156129e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a0e9190810190613c27565b604051919350915085907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a294509492505050565b60006001600160e01b0319821663041de68360e41b1480612a7857506001600160e01b031982166352d1902d60e01b145b8061084d57506301ffc9a760e01b6001600160e01b031983161461084d565b60006001600160e01b038211156120765760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f323420626974730000000000000000000000000000000000000000000000000060648201526084016109cc565b825460009081908015612c5f576000612b3487611c4a600185613576565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015612bb65760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b657973000000000060448201526064016109cc565b805163ffffffff808816911603612bff5784612bd788611c4a600186613576565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055612c4f565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b6020015192508391506127359050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316640100000000029190931617920191909155905081612735565b612cc28161273d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606109518383604051806060016040528060278152602001613d5360279139612dc6565b6000612d2d6002848418613bb6565b610951908484166135ee565b603254610100900460ff16612da45760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109cc565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b031685604051612de39190613d2d565b600060405180830381855af49150503d8060008114612e1e576040519150601f19603f3d011682016040523d82523d6000602084013e612e23565b606091505b5091509150612e3486838387612e3e565b9695505050505050565b60608315612ead578251600003612ea6576001600160a01b0385163b612ea65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109cc565b50816128f5565b6128f58383815115612ec25781518083602001fd5b8060405162461bcd60e51b81526004016109cc9190613d3f565b600060208284031215612eee57600080fd5b81356001600160e01b03198116811461095157600080fd5b600060208284031215612f1857600080fd5b5035919050565b600060a08284031215612f3157600080fd5b50919050565b600060a08284031215612f4957600080fd5b6109518383612f1f565b6001600160a01b0381168114610b9557600080fd5b803560048110612f7757600080fd5b919050565b600080600060608486031215612f9157600080fd5b833592506020840135612fa381612f53565b9150612fb160408501612f68565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60038110610b9557610b95612fba565b60208101612fed83612fd0565b91905290565b60008083601f84011261300557600080fd5b50813567ffffffffffffffff81111561301d57600080fd5b6020830191508360208260051b85010111156126fa57600080fd5b6000806020838503121561304b57600080fd5b823567ffffffffffffffff81111561306257600080fd5b61306e85828601612ff3565b90969095509350505050565b60006020828403121561308c57600080fd5b813561095181612f53565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156130d6576130d6613097565b604052919050565b600067ffffffffffffffff8211156130f8576130f8613097565b50601f01601f191660200190565b6000806040838503121561311957600080fd5b823561312481612f53565b9150602083013567ffffffffffffffff81111561314057600080fd5b8301601f8101851361315157600080fd5b803561316461315f826130de565b6130ad565b81815286602083850101111561317957600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080604083850312156131ac57600080fd5b8235915060208301356131be81612f53565b809150509250929050565b600481106131d9576131d9612fba565b9052565b6020810161084d82846131c9565b67ffffffffffffffff81168114610b9557600080fd5b8035612f77816131eb565b8015158114610b9557600080fd5b8035612f778161320c565b600080600080600080600080600060e08a8c03121561324357600080fd5b893567ffffffffffffffff8082111561325b57600080fd5b818c0191508c601f83011261326f57600080fd5b81358181111561327e57600080fd5b8d602082850101111561329057600080fd5b60209283019b509950908b013590808211156132ab57600080fd5b506132b88c828d01612ff3565b90985096505060408a013594506132d160608b01613201565b93506132df60808b01613201565b92506132ed60a08b01612f68565b91506132fb60c08b0161321a565b90509295985092959850929598565b6000806040838503121561331d57600080fd5b823561332881612f53565b946020939093013593505050565b60008060008060e0858703121561334c57600080fd5b843561335781612f53565b93506133668660208701612f1f565b925060c085013567ffffffffffffffff81111561338257600080fd5b61338e87828801612ff3565b95989497509550505050565b60005b838110156133b557818101518382015260200161339d565b50506000910152565b600081518084526133d681602086016020860161339a565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561345b578284038952815180516001600160a01b031685528581015186860152604090810151606091860182905290613447818701836133be565b9a87019a9550505090840190600101613408565b5091979650505050505050565b60006101a088151583528715156020840152865161348581612fd0565b8060408501525063ffffffff6020880151166060840152604087015167ffffffffffffffff80821660808601528060608a01511660a08601528060808a01511660c0860152505060a087015160e08401526134f86101008401878051825260208082015190830152604090810151910152565b8061016084015261350b818401866133ea565b91505082610180830152979650505050505050565b60008060006060848603121561353557600080fd5b8335925061354560208501612f68565b915060408401356135558161320c565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b8181038181111561084d5761084d613560565b808202811582820484141761084d5761084d613560565b60208082528181018390526000908460408401835b868110156135e35782356135c881612f53565b6001600160a01b0316825291830191908301906001016135b5565b509695505050505050565b8082018082111561084d5761084d613560565b67ffffffffffffffff81811683821601908082111561215057612150613560565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261364e57600080fd5b9190910192915050565b600181811c9082168061366c57607f821691505b602082108103612f3157634e487b7160e01b600052602260045260246000fd5b601f821115611dd157600081815260208120601f850160051c810160208610156136b35750805b601f850160051c820191505b8181101561196f578281556001016136bf565b81356136dd81612f53565b6001600160a01b0381166001600160a01b031983541617825550600160208084013582840155600283016040850135601e1986360301811261371e57600080fd5b8501803567ffffffffffffffff81111561373757600080fd5b803603848301131561374857600080fd5b61375c816137568554613658565b8561368c565b6000601f821160018114613792576000831561377a57508382018601355b600019600385901b1c1916600184901b1785556137eb565b600085815260209020601f19841690835b828110156137c2578685018901358255938801939089019088016137a3565b50848210156137e15760001960f88660031b161c198885880101351681555b50508683881b0185555b505050505050505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612e3460808301846133be565b60006020828403121561383a57600080fd5b81516109518161320c565b8381526001600160a01b0383166020820152606081016128f560408301846131c9565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b038088168352808716602084015250846040830152608060608301526138c4608083018486613868565b979650505050505050565b63ffffffff81168114610b9557600080fd5b6000602082840312156138f357600080fd5b8135610951816138cf565b60006020828403121561391057600080fd5b8135610951816131eb565b60038110610b9557600080fd5b6000813561084d816131eb565b81356139408161391b565b61394981612fd0565b815460ff821691508160ff1982161783556020840135613968816138cf565b64ffffffff008160081b169050808364ffffffffff198416171784556040850135613992816138cf565b68ffffffff00000000008160281b168468ffffffffffffffffff198516178317178555505050506139fc6139c860608401613928565b825470ffffffffffffffff000000000000000000191660489190911b70ffffffffffffffff00000000000000000016178255565b608082013560018201555050565b600060208284031215613a1c57600080fd5b81356109518161391b565b60a08101613a3487612fd0565b95815263ffffffff948516602082015292909316604083015267ffffffffffffffff1660608201526080015290565b600060208284031215613a7557600080fd5b5051919050565b600067ffffffffffffffff808a1683526020818a1681850152604060a081860152613aab60a086018a8c613868565b606086820381880152818983528483019050848a60051b8401018b60005b8c811015613b6e57858303601f190184528135368f9003605e19018112613aef57600080fd5b8e018035613afc81612f53565b6001600160a01b0316845280890135898501528781013536829003601e19018112613b2657600080fd5b0188810190358a811115613b3957600080fd5b803603821315613b4857600080fd5b8689860152613b5a8786018284613868565b958a01959450505090870190600101613ac9565b50508097505050505050505082608083015298975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082613bb157613bb1613b8c565b500690565b600082613bc557613bc5613b8c565b500490565b600060018201613bdc57613bdc613560565b5060010190565b60408101613bf182856131c9565b8260208301529392505050565b838152606060208201526000613c1760608301856133ea565b9050826040830152949350505050565b6000806040808486031215613c3b57600080fd5b835167ffffffffffffffff80821115613c5357600080fd5b818601915086601f830112613c6757600080fd5b8151602082821115613c7b57613c7b613097565b8160051b613c8a8282016130ad565b928352848101820192828101908b851115613ca457600080fd5b83870192505b84831015613d1957825186811115613cc25760008081fd5b8701603f81018d13613cd45760008081fd5b84810151613ce461315f826130de565b8181528e8b838501011115613cf95760008081fd5b613d08828883018d860161339a565b845250509183019190830190613caa565b9990920151989a9899505050505050505050565b6000825161364e81846020870161339a565b60208152600061095160208301846133be56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000811000a'

type MainVotingPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MainVotingPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MainVotingPlugin__factory extends ContractFactory {
  constructor(...args: MainVotingPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainVotingPlugin> {
    return super.deploy(overrides || {}) as Promise<MainVotingPlugin>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): MainVotingPlugin {
    return super.attach(address) as MainVotingPlugin
  }
  override connect(signer: Signer): MainVotingPlugin__factory {
    return super.connect(signer) as MainVotingPlugin__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MainVotingPluginInterface {
    return new utils.Interface(_abi) as MainVotingPluginInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainVotingPlugin {
    return new Contract(address, _abi, signerOrProvider) as MainVotingPlugin
  }
}
