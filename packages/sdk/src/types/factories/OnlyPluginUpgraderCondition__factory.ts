/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  OnlyPluginUpgraderCondition,
  OnlyPluginUpgraderConditionInterface,
} from '../OnlyPluginUpgraderCondition'
import type { PromiseOrValue } from '../common'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract DAO',
        name: '_dao',
        type: 'address',
      },
      {
        internalType: 'contract PluginSetupProcessor',
        name: '_psp',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_targetPluginAddresses',
        type: 'address[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'decodeApplyUpdateCalldata',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'daoAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'targetPluginAddress',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'decodeGrantRevokeCalldata',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'getSelector',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'selector',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_permissionId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'isGranted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000c4238038062000c42833981016040819052620000349162000157565b6001600160a01b03831615806200005257506001600160a01b038216155b806200005d57508051155b156200007c57604051630e52390960e41b815260040160405180910390fd5b60005b8151811015620000df57600160026000848481518110620000a457620000a462000257565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016200007f565b5050600180546001600160a01b039283166001600160a01b031991821617909155600080549390921692169190911790556200026d565b6001600160a01b03811681146200012c57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620001528162000116565b919050565b6000806000606084860312156200016d57600080fd5b83516200017a8162000116565b809350506020808501516200018f8162000116565b60408601519093506001600160401b0380821115620001ad57600080fd5b818701915087601f830112620001c257600080fd5b815181811115620001d757620001d76200012f565b8060051b604051601f19603f83011681018181108582111715620001ff57620001ff6200012f565b60405291825284820192508381018501918a8311156200021e57600080fd5b938501935b828510156200024757620002378562000145565b8452938501939285019262000223565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6109c5806200027d6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80632675fdd0116100505780632675fdd0146100c25780633fb834d8146100d557806375a5b2b21461012c57600080fd5b806301ffc9a71461006c5780630cbd17c814610094575b600080fd5b61007f61007a366004610650565b61018f565b60405190151581526020015b60405180910390f35b6100a96100a2366004610761565b6020015190565b6040516001600160e01b0319909116815260200161008b565b61007f6100d03660046107ba565b6101c6565b6100fc6100e3366004610761565b6020810151602480830151604484015190930101519092565b604080516001600160e01b031990941684526001600160a01b03928316602085015291169082015260600161008b565b61015761013a366004610761565b602081015160248201516044830151606490930151919390929190565b604080516001600160e01b03199590951685526001600160a01b0393841660208601529190921690830152606082015260800161008b565b60006001600160e01b031982166302675fdd60e41b14806101c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061020884848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100a292505050565b90506001600160e01b031981166331c6fcc960e21b1461022c5760009150506103c2565b600061023b8460048188610855565b810190610248919061087f565b509150508051600314610260576000925050506103c2565b6000805482516001600160a01b03909116918391610280576102806109a2565b6020026020010151600001516001600160a01b03161415806102d9575060005481516001600160a01b0390911690829060029081106102c1576102c16109a2565b6020026020010151600001516001600160a01b031614155b156102e9576000925050506103c2565b61032f816000815181106102ff576102ff6109a2565b6020026020010151604001518260028151811061031e5761031e6109a2565b6020026020010151604001516103cb565b61033e576000925050506103c2565b6001805482516001600160a01b039091169183918110610360576103606109a2565b6020026020010151600001516001600160a01b031614610385576000925050506103c2565b6103ac8160018151811061039b5761039b6109a2565b6020026020010151604001516105ad565b6103bb576000925050506103c2565b6001925050505b95945050505050565b60008060008060006103f487602081015160248201516044830151606490930151919390929190565b929650909450925090506001600160e01b031984166335a2eb4b60e21b146104235760009450505050506101c0565b6001600160a01b03831660009081526002602052604090205460ff166104505760009450505050506101c0565b6001546001600160a01b038381169116146104725760009450505050506101c0565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581146104a65760009450505050506101c0565b6020860151602487015160448801516064890151633658153160e21b6001600160e01b03198516146104e3576000985050505050505050506101c0565b6001600160a01b03831660009081526002602052604090205460ff16610514576000985050505050505050506101c0565b6001546001600160a01b0383811691161461053a576000985050505050505050506101c0565b7f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f58114610572576000985050505050505050506101c0565b826001600160a01b0316876001600160a01b03161461059c576000985050505050505050506101c0565b5060019a9950505050505050505050565b6000806000806105d0856020810151602480830151604484015190930101519092565b919450925090506001600160e01b031983166322e12c6360e01b146105fa57506000949350505050565b6000546001600160a01b0383811691161461061a57506000949350505050565b6001600160a01b03811660009081526002602052604090205460ff1661064557506000949350505050565b506001949350505050565b60006020828403121561066257600080fd5b81356001600160e01b03198116811461067a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106ba576106ba610681565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106e9576106e9610681565b604052919050565b600082601f83011261070257600080fd5b813567ffffffffffffffff81111561071c5761071c610681565b61072f601f8201601f19166020016106c0565b81815284602083860101111561074457600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561077357600080fd5b813567ffffffffffffffff81111561078a57600080fd5b610796848285016106f1565b949350505050565b80356001600160a01b03811681146107b557600080fd5b919050565b6000806000806000608086880312156107d257600080fd5b6107db8661079e565b94506107e96020870161079e565b935060408601359250606086013567ffffffffffffffff8082111561080d57600080fd5b818801915088601f83011261082157600080fd5b81358181111561083057600080fd5b89602082850101111561084257600080fd5b9699959850939650602001949392505050565b6000808585111561086557600080fd5b8386111561087257600080fd5b5050820193919092039150565b60008060006060848603121561089457600080fd5b8335925060208085013567ffffffffffffffff808211156108b457600080fd5b818701915087601f8301126108c857600080fd5b8135818111156108da576108da610681565b8060051b6108e98582016106c0565b918252838101850191858101908b84111561090357600080fd5b86860192505b8383101561098b5782358581111561092057600080fd5b86016060818e03601f1901121561093657600080fd5b61093e610697565b61094989830161079e565b81526040820135898201526060820135878111156109675760008081fd5b6109758f8b838601016106f1565b6040830152508352509186019190860190610909565b989b989a5050505060409690960135955050505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000811000a'

type OnlyPluginUpgraderConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: OnlyPluginUpgraderConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class OnlyPluginUpgraderCondition__factory extends ContractFactory {
  constructor(...args: OnlyPluginUpgraderConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnlyPluginUpgraderCondition> {
    return super.deploy(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    ) as Promise<OnlyPluginUpgraderCondition>
  }
  override getDeployTransaction(
    _dao: PromiseOrValue<string>,
    _psp: PromiseOrValue<string>,
    _targetPluginAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dao,
      _psp,
      _targetPluginAddresses,
      overrides || {}
    )
  }
  override attach(address: string): OnlyPluginUpgraderCondition {
    return super.attach(address) as OnlyPluginUpgraderCondition
  }
  override connect(signer: Signer): OnlyPluginUpgraderCondition__factory {
    return super.connect(signer) as OnlyPluginUpgraderCondition__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OnlyPluginUpgraderConditionInterface {
    return new utils.Interface(_abi) as OnlyPluginUpgraderConditionInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnlyPluginUpgraderCondition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnlyPluginUpgraderCondition
  }
}
