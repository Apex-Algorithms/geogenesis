/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from '../../common'
import type { SpacePlugin, SpacePluginInterface } from '../../space/SpacePlugin'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dao',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    name: 'DaoUnauthorized',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'blockIndex',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'itemIndex',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'contentUri',
        type: 'string',
      },
    ],
    name: 'GeoProposalProcessed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'subspaceDao',
        type: 'address',
      },
    ],
    name: 'SubspaceAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'subspaceDao',
        type: 'address',
      },
    ],
    name: 'SubspaceRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'predecessorSpace',
        type: 'address',
      },
    ],
    name: 'SuccessorSpaceCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPGRADE_PLUGIN_PERMISSION_ID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dao',
        type: 'address',
      },
    ],
    name: 'acceptSubspace',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'contract IDAO',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDAO',
        name: '_dao',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_firstBlockContentUri',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_predecessorSpace',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pluginType',
    outputs: [
      {
        internalType: 'enum IPlugin.PluginType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_blockIndex',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_itemIndex',
        type: 'uint32',
      },
      {
        internalType: 'string',
        name: '_contentUri',
        type: 'string',
      },
    ],
    name: 'processGeoProposal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dao',
        type: 'address',
      },
    ],
    name: 'removeSubspace',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516113f1610118600039600081816102a50152818161032f0152818161051e015281816105a3015261068d01526113f16000f3fe6080604052600436106100c75760003560e01c80634f1ef286116100745780637bb7c0d81161004e5780637bb7c0d8146101fc5780639de8c0c21461021c578063c9c4bfca1461023c57600080fd5b80634f1ef286146101b157806352d1902d146101c45780635c60da1b146101e757600080fd5b80634162169f116100a55780634162169f1461014357806341de6830146101755780634a5854d51461019157600080fd5b806301ffc9a7146100cc5780633659cfe61461010157806340c2b8f314610123575b600080fd5b3480156100d857600080fd5b506100ec6100e736600461100e565b610270565b60405190151581526020015b60405180910390f35b34801561010d57600080fd5b5061012161011c36600461104d565b61029b565b005b34801561012f57600080fd5b5061012161013e36600461112f565b61041b565b34801561014f57600080fd5b5060c9546001600160a01b03165b6040516001600160a01b0390911681526020016100f8565b34801561018157600080fd5b5060006040516100f8919061118d565b34801561019d57600080fd5b506101216101ac36600461104d565b61049a565b6101216101bf3660046111b5565b610514565b3480156101d057600080fd5b506101d9610680565b6040519081526020016100f8565b3480156101f357600080fd5b5061015d610745565b34801561020857600080fd5b50610121610217366004611219565b61077d565b34801561022857600080fd5b5061012161023736600461104d565b610925565b34801561024857600080fd5b506101d97f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581565b60006001600160e01b03198216633b317b0f60e21b1480610295575061029582610997565b92915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361032d5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146103f35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610324565b6103fc816109e7565b6040805160008082526020820190925261041891839190610a20565b50565b60c9547f9a34d54a94e2d26b0ef16563ae461730b61d3a970ce6cd803285018cdaa7ea2790610459906001600160a01b031630335b84600036610bc5565b7f9ef25cd88fb27d6b34b73da4d83b688fdc6e8682562955b4825514b32478d03284848460405161048c939291906112cd565b60405180910390a150505050565b60c9547f4519016625770ea7c53ec57edd39c12235608ddd99826b3e3c04160b459f1f25906104d3906001600160a01b03163033610450565b6040516001600160a01b03831681527f9f0d34123935d8b5da19f8f1794cda0825f02d4fb6980b316828fb7020e3a93c906020015b60405180910390a15050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105a15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610324565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105fc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146106675760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610324565b610670826109e7565b61067c82826001610a20565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107205760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610324565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006107787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b600054610100900460ff161580801561079d5750600054600160ff909116105b806107b75750303b1580156107b7575060005460ff166001145b6108295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610324565b6000805460ff19166001179055801561084c576000805461ff0019166101001790555b61085584610c81565b6001600160a01b038216156108a1576040516001600160a01b03831681527f8f36056dbf81ce6a934ea8a8154e355119a798622bb1d9abe209abfa89197f3e9060200160405180910390a15b7f9ef25cd88fb27d6b34b73da4d83b688fdc6e8682562955b4825514b32478d032600080856040516108d5939291906112cd565b60405180910390a1801561091f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161048c565b50505050565b60c9547f4519016625770ea7c53ec57edd39c12235608ddd99826b3e3c04160b459f1f259061095e906001600160a01b03163033610450565b6040516001600160a01b03831681527f4821e189b79b111a264572db96113c5e337dab13d3c71ac2169ce8bc0df7116490602001610508565b60006001600160e01b0319821663041de68360e41b14806109c857506001600160e01b031982166352d1902d60e01b145b8061029557506301ffc9a760e01b6001600160e01b0319831614610295565b60c9547f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f59061067c906001600160a01b03163033610450565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a5857610a5383610cf5565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ab2575060408051601f3d908101601f19168201909252610aaf918101906112ff565b60015b610b245760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610324565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610bb95760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610324565b50610a53838383610dc0565b604051637ef7c88360e11b81526001600160a01b0387169063fdef910690610bf99088908890889088908890600401611318565b602060405180830381865afa158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a919061136c565b610c7957604051630cb6f8ed60e21b81526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401610324565b505050505050565b600054610100900460ff16610cec5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610324565b61041881610de5565b6001600160a01b0381163b610d725760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610324565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610dc983610e7f565b600082511180610dd65750805b15610a535761091f8383610ebf565b600054610100900460ff16610e505760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610324565b60c9805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e8881610cf5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610ee483836040518060600160405280602781526020016113be60279139610eeb565b9392505050565b6060600080856001600160a01b031685604051610f08919061138e565b600060405180830381855af49150503d8060008114610f43576040519150601f19603f3d011682016040523d82523d6000602084013e610f48565b606091505b5091509150610f5986838387610f63565b9695505050505050565b60608315610fd2578251600003610fcb576001600160a01b0385163b610fcb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610324565b5081610fdc565b610fdc8383610fe4565b949350505050565b815115610ff45781518083602001fd5b8060405162461bcd60e51b815260040161032491906113aa565b60006020828403121561102057600080fd5b81356001600160e01b031981168114610ee457600080fd5b6001600160a01b038116811461041857600080fd5b60006020828403121561105f57600080fd5b8135610ee481611038565b803563ffffffff8116811461107e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156110b4576110b4611083565b604051601f8501601f19908116603f011681019082821181831017156110dc576110dc611083565b816040528093508581528686860111156110f557600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261112057600080fd5b610ee483833560208501611099565b60008060006060848603121561114457600080fd5b61114d8461106a565b925061115b6020850161106a565b9150604084013567ffffffffffffffff81111561117757600080fd5b6111838682870161110f565b9150509250925092565b60208101600383106111af57634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156111c857600080fd5b82356111d381611038565b9150602083013567ffffffffffffffff8111156111ef57600080fd5b8301601f8101851361120057600080fd5b61120f85823560208401611099565b9150509250929050565b60008060006060848603121561122e57600080fd5b833561123981611038565b9250602084013567ffffffffffffffff81111561125557600080fd5b6112618682870161110f565b925050604084013561127281611038565b809150509250925092565b60005b83811015611298578181015183820152602001611280565b50506000910152565b600081518084526112b981602086016020860161127d565b601f01601f19169290920160200192915050565b600063ffffffff8086168352808516602084015250606060408301526112f660608301846112a1565b95945050505050565b60006020828403121561131157600080fd5b5051919050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006020828403121561137e57600080fd5b81518015158114610ee457600080fd5b600082516113a081846020870161127d565b9190910192915050565b602081526000610ee460208301846112a156fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000811000a'

type SpacePluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: SpacePluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SpacePlugin__factory extends ContractFactory {
  constructor(...args: SpacePluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpacePlugin> {
    return super.deploy(overrides || {}) as Promise<SpacePlugin>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SpacePlugin {
    return super.attach(address) as SpacePlugin
  }
  override connect(signer: Signer): SpacePlugin__factory {
    return super.connect(signer) as SpacePlugin__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SpacePluginInterface {
    return new utils.Interface(_abi) as SpacePluginInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpacePlugin {
    return new Contract(address, _abi, signerOrProvider) as SpacePlugin
  }
}
