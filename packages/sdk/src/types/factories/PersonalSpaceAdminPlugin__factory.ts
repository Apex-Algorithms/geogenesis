/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PersonalSpaceAdminPlugin,
  PersonalSpaceAdminPluginInterface,
} from '../PersonalSpaceAdminPlugin'
import type { PromiseOrValue } from '../common'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dao',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'where',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'permissionId',
        type: 'bytes32',
      },
    ],
    name: 'DaoUnauthorized',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'startDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'endDate',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct IDAO.Action[]',
        name: 'actions',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'allowFailureMap',
        type: 'uint256',
      },
    ],
    name: 'ProposalCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'ProposalExecuted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'contract IDAO',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IDAO.Action[]',
        name: '_actions',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '_allowFailureMap',
        type: 'uint256',
      },
    ],
    name: 'executeProposal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDAO',
        name: '_dao',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isEditor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pluginType',
    outputs: [
      {
        internalType: 'enum IPlugin.PluginType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proposalCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610e97806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806361af5ebe1161005b57806361af5ebe146100d4578063a0748154146100e9578063c4d66de8146100fc578063da35c6641461010f57600080fd5b806301ffc9a7146100825780634162169f146100aa57806341de6830146100c5575b600080fd5b6100956100903660046107bb565b610125565b60405190151581526020015b60405180910390f35b6065546040516001600160a01b0390911681526020016100a1565b60016040516100a191906107ec565b6100e76100e2366004610814565b610150565b005b6100956100f73660046108f6565b6101e0565b6100e761010a3660046108f6565b610295565b6101176103bc565b6040519081526020016100a1565b60006001600160e01b031982166352bc99ab60e11b148061014a575061014a826103cc565b92915050565b6065547f8ac82884812c14e67684b8d6d544d421d2b6a26c9c323b3125297e65fa6829e29061018d906001600160a01b03163033846000366103f1565b6000610198426104ad565b905060006101ac33898985868b8b8b610531565b90506101d46101c36065546001600160a01b031690565b826101ce888a6109cf565b87610597565b50505050505050505050565b60006101f46065546001600160a01b031690565b6001600160a01b031663fdef910630847f8ac82884812c14e67684b8d6d544d421d2b6a26c9c323b3125297e65fa6829e2604051806020016040528060008152506040518563ffffffff1660e01b81526004016102549493929190610b29565b602060405180830381865afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014a9190610b65565b600054610100900460ff16158080156102b55750600054600160ff909116105b806102cf5750303b1580156102cf575060005460ff166001145b6103465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460ff191660011790558015610369576000805461ff0019166101001790555b6103728261064d565b80156103b8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006103c760975490565b905090565b60006001600160e01b0319821663368d719960e21b148061014a575061014a826106c4565b604051637ef7c88360e11b81526001600160a01b0387169063fdef9106906104259088908890889088908890600401610bb0565b602060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190610b65565b6104a557604051630cb6f8ed60e21b81526001600160a01b0380881660048301528087166024830152851660448201526064810184905260840161033d565b505050505050565b600067ffffffffffffffff82111561052d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f3420626974730000000000000000000000000000000000000000000000000000606482015260840161033d565b5090565b600061053b6106f9565b9050886001600160a01b0316817fa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c9288888c8c8a8a8a6040516105839796959493929190610bee565b60405180910390a398975050505050505050565b6040516331c6fcc960e21b81526060906000906001600160a01b0387169063c71bf324906105cd90889088908890600401610cfe565b6000604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106149190810190610d96565b604051919350915085907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a294509492505050565b600054610100900460ff166106b85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161033d565b6106c181610716565b50565b60006001600160e01b0319821663041de68360e41b148061014a57506301ffc9a760e01b6001600160e01b031983161461014a565b60006107036103bc565b9050610713609780546001019055565b90565b600054610100900460ff166107815760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161033d565b606580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000602082840312156107cd57600080fd5b81356001600160e01b0319811681146107e557600080fd5b9392505050565b602081016003831061080e57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006060868803121561082c57600080fd5b853567ffffffffffffffff8082111561084457600080fd5b818801915088601f83011261085857600080fd5b81358181111561086757600080fd5b89602082850101111561087957600080fd5b60209283019750955090870135908082111561089457600080fd5b818801915088601f8301126108a857600080fd5b8135818111156108b757600080fd5b8960208260051b85010111156108cc57600080fd5b96999598505060200195604001359392505050565b6001600160a01b03811681146106c157600080fd5b60006020828403121561090857600080fd5b81356107e5816108e1565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561094c5761094c610913565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561097b5761097b610913565b604052919050565b600067ffffffffffffffff82111561099d5761099d610913565b5060051b60200190565b600067ffffffffffffffff8211156109c1576109c1610913565b50601f01601f191660200190565b60006109e26109dd84610983565b610952565b80848252602080830192508560051b850136811115610a0057600080fd5b855b81811015610acd57803567ffffffffffffffff80821115610a235760008081fd5b818901915060608236031215610a395760008081fd5b610a41610929565b8235610a4c816108e1565b8152828601358682015260408084013583811115610a6a5760008081fd5b939093019236601f850112610a8157600092508283fd5b83359250610a916109dd846109a7565b8381523688858701011115610aa65760008081fd5b83888601898301376000938101880193909352810191909152865250938201938201610a02565b50919695505050505050565b60005b83811015610af4578181015183820152602001610adc565b50506000910152565b60008151808452610b15816020860160208601610ad9565b601f01601f19169290920160200192915050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152610b5b6080830184610afd565b9695505050505050565b600060208284031215610b7757600080fd5b815180151581146107e557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808816835280871660208401525084604083015260806060830152610be3608083018486610b87565b979650505050505050565b600067ffffffffffffffff808a1683526020818a1681850152604060a081860152610c1d60a086018a8c610b87565b606086820381880152818983528483019050848a60051b8401018b60005b8c811015610ce057858303601f190184528135368f9003605e19018112610c6157600080fd5b8e018035610c6e816108e1565b6001600160a01b0316845280890135898501528781013536829003601e19018112610c9857600080fd5b0188810190358a811115610cab57600080fd5b803603821315610cba57600080fd5b8689860152610ccc8786018284610b87565b958a01959450505090870190600101610c3b565b50508097505050505050505082608083015298975050505050505050565b600060608083018684526020828186015281875180845260808701915060808160051b880101935082890160005b82811015610d7f57888603607f19018452815180516001600160a01b031687528581015186880152604090810151908701889052610d6c88880182610afd565b9650509284019290840190600101610d2c565b505050505060409390930193909352509392505050565b6000806040808486031215610daa57600080fd5b835167ffffffffffffffff80821115610dc257600080fd5b818601915086601f830112610dd657600080fd5b81516020610de66109dd83610983565b82815260059290921b8401810191818101908a841115610e0557600080fd5b8286015b84811015610e7657805186811115610e215760008081fd5b8701603f81018d13610e335760008081fd5b84810151610e436109dd826109a7565b8181528e8b838501011115610e585760008081fd5b610e67828883018d8601610ad9565b85525050918301918301610e09565b50989091015197999798505050505050505056fea164736f6c6343000811000a'

type PersonalSpaceAdminPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: PersonalSpaceAdminPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class PersonalSpaceAdminPlugin__factory extends ContractFactory {
  constructor(...args: PersonalSpaceAdminPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PersonalSpaceAdminPlugin> {
    return super.deploy(overrides || {}) as Promise<PersonalSpaceAdminPlugin>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): PersonalSpaceAdminPlugin {
    return super.attach(address) as PersonalSpaceAdminPlugin
  }
  override connect(signer: Signer): PersonalSpaceAdminPlugin__factory {
    return super.connect(signer) as PersonalSpaceAdminPlugin__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): PersonalSpaceAdminPluginInterface {
    return new utils.Interface(_abi) as PersonalSpaceAdminPluginInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PersonalSpaceAdminPlugin {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PersonalSpaceAdminPlugin
  }
}
